{"version":3,"sources":["components/templates/TemplateFieldBox.module.css","components/templates/TemplateFields.module.css","components/fieldTypes/CImage.module.css","hooks/useField.js","components/library/LibrariesList.module.css","components/templates/LinkToLibraryField.module.css","components/buttons/GoBack.module.css","components/library/ShortEntryView.js","components/library/Header.js","components/library/LibraryHeader.js","components/library/EntriesList.js","components/fieldTypes/CInt.js","components/fieldTypes/CFloat.js","components/fieldTypes/CString.js","components/fieldTypes/CImage.js","components/fieldTypes/CDate.js","components/fieldTypes/CDateTime.js","utils/utilsFunction.js","components/fieldTypes/CBarcode.js","components/fieldTypes/CAudio.js","components/fieldTypes/CCheckbox.js","components/fieldTypes/CDropDownList.js","components/library/ModalEntriesList.js","components/fieldTypes/LinkToEntry.js","UI/DialogQuestion.js","components/library/EntryViewHeader.js","components/library/EntryEditHeader.js","API/graphQLTypes.js","components/fieldTypes/CScript.js","store/configuration-slice.js","components/library/SingleEntryPage.js","components/buttons/LibraryTileOptions.js","components/library/LibraryTile.js","components/library/LibrariesList.js","components/templates/LinkToLibraryField.js","components/templates/SelectField.js","components/templates/TemplateFieldCreator.js","components/templates/TemplateFieldBox.js","components/templates/TemplateFields.js","components/buttons/GoBack.js","components/templates/TemplateLibraryCreator.js","UI/HeaderMenuOptions.js","UI/MainTopHeader.js","components/configuration/ClearLocalStorage.js","components/configuration/Configuration.js","App.js","API/config.js","reportWebVitals.js","store/store.js","store/browser-store.js","style/customTheme.js","index.js","store/editedEntry-slice.js","store/librariesData-slice.js","store/templateLibraries-slice.js","components/templates/TemplateLibraryCreator.module.css","components/templates/TemplateFieldCreator.module.css","components/templates/SelectField.module.css"],"names":["module","exports","useField","searchedFieldName","field","useSelector","state","selectFieldByName","type","value","useLinkToEntryField","link_libUUID","entryLinks","length","libUUID","listRowsUUID","forEach","entry","push","rowUUID","templateColumns","selectLibraryById","rowsData","getRowsDataByIds","useScriptField","columnTemplate","options","script","getFieldValue","fieldName","this","columns","find","column","name","toLowerCase","sqlFieldName","map","row","fieldLink","fieldType","scriptValue","ScriptResult","status","error","useLinkToEntryField_t","scriptJSON","scriptObject","JSON","parse","scriptCode","expr","replaceAll","code","includes","lastLine","split","reverse","line","trim","join","console","log","evalCode","eval","e","SyntaxError","message","ShortEntryView","mode","content","ListItemButton","fe_title","ListItemText","primary","secondary","fe_description","Box","to","pathname","Header","props","history","useHistory","sx","flexGrow","AppBar","position","Toolbar","IconButton","size","edge","color","mr","onClick","goBack","Typography","variant","component","title","children","LibraryHeader","library","EntriesList","parentColumnUUID","clickEntryLinkHandler","location","useLocation","dispatch","useDispatch","libData","getLibDataByLibraryId","libTemplate","clickBoxHandler","columnParentName","col","columnUUID","link","newUUID","uuidv4","sqlTableName","addNewEntryLink","CustomBox","clickHandler","List","width","bgcolor","subheader","ListSubheader","id","backgroundColor","rows","Divider","CInt","isEdit","TextField","columnName","label","focused","disabled","defaultValue","onBlur","data","target","checked","updateFieldValue","mx","CFloat","CString","multiline","maxRows","CImage","useState","showCamera","setShowCamera","String","images","setImages","className","classes","list","src","idx","alt","newImages","splice","deleteImageHandler","isImageMirror","idealFacingMode","FACING_MODES","ENVIRONMENT","onTakePhoto","dataUri","handleTakePhoto","CDate","dateString","Date","toISOString","replace","CDateTime","undefined","isNotEmpty","checkIfValueIsDate","setValue","useEffect","stringify","saveDataHandler","LocalizationProvider","dateAdapter","AdapterDateFns","DateTimePicker","renderInput","onChange","newValue","CBarcode","CAudio","addresses","controls","CCheckbox","isDisabled","isChecked","FormControlLabel","control","Checkbox","inputProps","labelPlacement","CDropDownList","selectOptions","index","Select","option","MenuItem","style","top","left","transform","maxHeight","border","boxShadow","overflow","ModalEntriesList","toggleShowModal","LinkToEntry","showModal","setShowModal","isLinkListOpen","setIsLinkListOpen","toggleShowModalHandler","document","body","dictionaryLibraryUUID","libName","dictionaryLibraryName","isEditMode","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","disablePadding","entryLink","ListItem","pl","secondaryAction","rowTitle","event","entryIndex","preventDefault","deleteEntryLink","ListItemIcon","Modal","open","onClose","DialogQuestion","isAlertOpen","disagreeHandler","agreeHandler","contentText","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","autoFocus","DIALOG_QUESTION","EntryViewHeader","setMode","isDeleteAlertOpen","setIsDeleteAlertOpen","deleteRowData","EntryEditHeader","actionButtonHandler","cancelHandler","saveHandler","setIsSnackbarOpen","GET_LIBRARIES_TEMPLATES","gql","GET_LIBRARIES_DATA_PG","UPDATE_LIBRARY_ROWS_PG","ADD_LIBRARY_ROWS_PG","ADD_LIBRARY_TEMPLATE_PG","UPDATE_LIBRARY_TEMPLATE_PG","CScript","configurationSlice","createSlice","initialState","conf","storageType","isFirstStart","reducers","updateConfiguration","action","payload","actions","selectConfiguration","configuration","setComponentByType","SingleEntryPage","entryViewConfigJson","localStorage","getItem","isSnackbarOpen","useMutation","updateEntryInPG","addEntryInPG","columnsTemplates","getRowDataById","fieldsInit","fieldValue","order","entrylinks","updateEntryValues","clearState","setItem","prepareDataForSendToPG","updatedEntry","savedRowUUID","getValue","hasOwnProperty","tableName","uuid","tableParentName","rowParentUUID","rowJSON","sendInsertedDataToDatabase","variables","libraryData","sendUpdatedDataToDatabase","insertedEntry","fields","selectAllFields","snackbarCloseHandle","reason","editedEntry","editedFields","addNewLibraryRecord","updateLibraryRecord","Grid","container","spacing","item","xs","m","Snackbar","autoHideDuration","Alert","severity","LibraryTileOptions","closeMenu","deleteLibraryData","deleteLibraryTemplate","LibraryTile","anchorEl","setAnchorEl","isMenuOpened","Boolean","handleCloseMenu","Card","maxWidth","CardHeader","avatar","CardMedia","image","currentTarget","Menu","anchorOrigin","vertical","horizontal","transformOrigin","CardContent","entriesCount","lastModification","CardActions","disableSpacing","ml","LibrariesList","libraries","librariesTemplate","lib","LinkToLibraryField","setOptions","defaultOptions","librariesInfo","selectLibrariesInfo","getOptionValue","chosenLibrary","setChosenLibrary","applyOptions","main","selectedIndex","SelectField","points","setPoints","showAddModal","setShowAddModal","pointName","setPointName","isDefault","setIsDefault","ul","point","default","newPointsList","removePointFromListHandler","modal","header","newPoints","htmlFor","defaultChecked","backdrop","getScriptCode","jsonString","TemplateFieldCreator","saveFieldConfigHandler","cancelModal","fieldConfigTemplate","fieldConfigForUpdate","fieldConfig","availableFieldTypes","availableFieldViewOptions","getFieldType","fieldConfigInit","usage","setFieldConfig","setFieldType","fieldOptions","setFieldOptions","setInputValueHandler","prevFieldConfig","element","fieldConfigTmp","availableType","form","hintField","defaultValueField","TemplateFieldBox","editField","box","leftSide","description","TemplateFields","saveFieldsConfigHandler","fieldsConfig","setFieldsConfig","editFieldHandler","foundField","addButton","prev","foundFieldIdx","findIndex","newFieldsConfig","GoBack","clearEntryStore","TemplateLibraryCreator","libConfig","setLibConfig","showPanel","setShowPanel","insertTemplateInPG","updateTemplateInPG","isUpdate","templateLibSelected","buttonActive","active","libConfigTmp","prepareSqlFieldName","addNewLibraryTemplate","addNewLibraryData","libraryTemplate","tab","tabButton","mainOptions","HeaderMenuOptions","MainTopHeader","anchorElement","setAnchorElement","handleClose","keepMounted","ClearLocalStorage","isOpen","setIsOpen","removeItem","window","reload","Configuration","config","setStorageType","onSubmit","configForSave","display","flexDirection","FormControl","InputLabel","labelId","autoWidth","mt","App","useQuery","loadingDataPg","loading","errorDataPg","dataPg","configJson","templatesJson","updateAllLibraries","dataJson","updateAllLibrariesDataFromStorage","librariesTemplates","updateAllLibrariesData","librariesDataPG","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","librariesTemplateSlice","editedEntrySlice","librariesData","librariesDataSlice","BrowserStore","selectAllDataLibrary","templateLibraries","selectAllLibraries","customTheme","createTheme","palette","dark","grey","light","lighter","yellow","client","ApolloClient","uri","cache","InMemoryCache","addTypename","ReactDOM","StrictMode","ApolloProvider","ThemeProvider","theme","getElementById","items","valueIn","fieldIndex","columnsFromJSON","libTemp","libIndex","rowIndex","newRow","titleColumnsValues","descriptionColumnsValues","filter","templateLibIdx"],"mappings":"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","file":"static/js/main.575c100c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"TemplateFieldBox_box__J2Qkg\",\"leftSide\":\"TemplateFieldBox_leftSide__3m42l\",\"description\":\"TemplateFieldBox_description__1xdap\",\"libName\":\"TemplateFieldBox_libName__1z6TS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"TemplateFields_ul__2K5_A\",\"addButton\":\"TemplateFields_addButton__1u_7n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"CImage_list__2otOE\"};","import { useSelector } from \"react-redux\";\nimport { selectFieldByName } from \"../store/editedEntry-slice\";\nimport { getRowsDataByIds } from \"../store/librariesData-slice\";\nimport { selectLibraryById } from \"../store/templateLibraries-slice\";\n\nconst useField = (searchedFieldName) => {\n  const field = useSelector((state) =>\n    selectFieldByName(state, searchedFieldName)\n  );\n  if (field?.type !== \"libEntry\") {\n    return field?.field?.value;\n  }\n};\n\nexport const useLinkToEntryField = (searchedFieldName) => {\n  const field = useSelector((state) =>\n    selectFieldByName(state, searchedFieldName)\n  );\n\n  let link_libUUID;\n  if (field?.field?.entryLinks && field?.field?.entryLinks?.length > 0) {\n    link_libUUID = field?.field?.entryLinks[0]?.libUUID;\n  }\n  const listRowsUUID = [];\n  field?.field?.entryLinks?.forEach((entry) => {\n    listRowsUUID.push(entry.rowUUID);\n  });\n  const templateColumns = useSelector((state) =>\n    selectLibraryById(state, link_libUUID)\n  );\n\n  const rowsData = useSelector((state) =>\n    getRowsDataByIds(state, { libUUID: link_libUUID, listRowsUUID })\n  );\n\n  const { value } = useScriptField(\n    field?.columnTemplate?.options[0]?.script,\n    field?.type\n  );\n  if (field?.type === \"script\") return value;\n  if (field?.type !== \"libEntry\") return field?.field?.value;\n\n  function getFieldValue(fieldName) {\n    const sqlFieldName = templateColumns.columns.find(\n      (column) => column.name.toLowerCase() === fieldName.toLowerCase()\n    )?.sqlFieldName;\n    return this[sqlFieldName];\n  }\n\n  return (\n    rowsData?.map((row) => {\n      const entry = {\n        ...row,\n      };\n      entry.fieldLink = getFieldValue;\n      return entry;\n    }) || []\n  );\n};\n\nexport const useScriptField = (script, fieldType) => {\n  let scriptValue;\n  const ScriptResult = {\n    status: \"InProgress\",\n    value: null,\n    error: null,\n  };\n  if (fieldType !== \"script\") return ScriptResult;\n  // eslint-disable-next-line\n  const useLinkToEntryField_t = (searchedFieldName) => {\n    return useLinkToEntryField(searchedFieldName);\n  };\n  let scriptJSON = script;\n\n  const scriptObject = JSON.parse(scriptJSON);\n  let scriptCode = scriptObject.expr;\n  scriptCode = scriptCode.replaceAll(\"].field(\", \"]?.fieldLink(\");\n  scriptCode = scriptCode.replaceAll(\"field(\", \" useLinkToEntryField_t(\");\n  scriptCode = scriptCode.replaceAll(\"srd(\", \" return(\");\n  scriptCode = scriptCode.replaceAll(\"src\", \" \");\n  const code = [];\n  if (!scriptCode.includes(\"return\")) {\n    let lastLine = true;\n    scriptCode\n      .split(\"\\n\")\n      .reverse()\n      .forEach((line) => {\n        if (line.trim().length > 3) {\n          if (lastLine) code.push(` return ${line}`);\n          else code.push(line);\n          lastLine = false;\n        }\n      });\n    scriptCode = code.reverse().join(\"\\n\");\n  }\n  console.log(\"before eval\", scriptCode);\n\n  const evalCode = `\nconst functionScript = () => {\n  ${scriptCode}\n  return 'Ups no return'\n};\n// console.log(functionScript());\nscriptValue = functionScript();\n\n`;\n\n  try {\n    // eslint-disable-next-line\n    eval(evalCode);\n    ScriptResult.value = scriptValue;\n    ScriptResult.status = \"success\";\n  } catch (e) {\n    ScriptResult.error = e;\n    ScriptResult.status = \"error\";\n    if (e instanceof SyntaxError) {\n      console.error(e.message);\n    }\n  }\n\n  return ScriptResult;\n};\n\nexport default useField;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"LibrariesList_list__d57me\",\"item\":\"LibrariesList_item__e7j7n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"LinkToLibraryField_main__2O8Lh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"goBack\":\"GoBack_goBack__gYX2-\"};","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ListItemButton, ListItemText } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nconst ShortEntryView = ({ entry, mode, libUUID }) => {\n  const content = (\n    <ListItemButton\n      data-testid={\n        \"linkToEntry-\" + entry.fe_title.replaceAll(\" \", \"_\").toLowerCase()\n      }\n    >\n      <ListItemText primary={entry.fe_title} secondary={entry.fe_description} />\n    </ListItemButton>\n  );\n  if (mode === \"linking\") return <Box>{content}</Box>;\n  else\n    return (\n      <Link\n        to={{\n          pathname: \"/library/entry\",\n          state: {\n            libUUID: libUUID,\n            rowUUID: entry?.rowUUID,\n            mode: \"view\",\n          },\n        }}\n      >\n        {content}\n      </Link>\n    );\n};\n\nexport default ShortEntryView;\n","import React from \"react\";\nimport { Box } from \"@mui/system\";\nimport { AppBar, IconButton, Toolbar, Typography } from \"@mui/material\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport HomeIcon from \"@mui/icons-material/Home\";\nimport { useHistory } from \"react-router\";\n\nconst Header = (props) => {\n  const history = useHistory();\n\n  const handlerHomeClick = () => {\n    history.push(\"/\");\n  };\n  const handleGoBackClick = () => {\n    history.goBack();\n  };\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          {props.mode !== \"empty\" && (\n            <>\n              <IconButton\n                size=\"large\"\n                edge=\"start\"\n                color=\"inherit\"\n                aria-label=\"go-back\"\n                data-testid=\"go-back\"\n                sx={{ mr: 2 }}\n                onClick={handleGoBackClick}\n              >\n                <ArrowBackIcon />\n              </IconButton>\n              <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n                {props.title}\n              </Typography>\n\n              <IconButton\n                size=\"large\"\n                edge=\"end\"\n                color=\"inherit\"\n                aria-label=\"home\"\n                data-testid=\"home\"\n                sx={{ mr: 2 }}\n                onClick={handlerHomeClick}\n              >\n                <HomeIcon />\n              </IconButton>\n            </>\n          )}\n          {props.children}\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport Header from \"./Header\";\n\nconst LibraryHeader = ({ library, mode }) => {\n  const { name } = library;\n\n  return <Header title={name}></Header>;\n};\n\nexport default LibraryHeader;\n","import React from \"react\";\nimport ShortEntryView from \"./ShortEntryView\";\nimport { useSelector } from \"react-redux\";\nimport { selectLibraryById } from \"../../store/templateLibraries-slice\";\nimport { addNewEntryLink } from \"../../store/editedEntry-slice\";\nimport LibraryHeader from \"./LibraryHeader\";\nimport { useLocation } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { getLibDataByLibraryId } from \"../../store/librariesData-slice\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport {\n  Divider,\n  IconButton,\n  List,\n  ListItemButton,\n  ListItemText,\n  ListSubheader,\n  Typography,\n} from \"@mui/material\";\nimport Header from \"./Header\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\n\nconst EntriesList = ({\n  libUUID,\n  mode,\n  parentColumnUUID,\n  clickEntryLinkHandler,\n}) => {\n  const location = useLocation();\n  if (mode !== \"linking\") libUUID = location?.state?.libUUID;\n  const dispatch = useDispatch();\n  const libData = useSelector((state) => getLibDataByLibraryId(state, libUUID));\n  const library = {\n    name: libData?.name,\n  };\n\n  const libTemplate = useSelector((state) => selectLibraryById(state, libUUID));\n  const clickBoxHandler = (entry) => {\n    if (mode === \"linking\") {\n      const columnParentName = libTemplate.columns.find(\n        (col) => col.columnUUID === parentColumnUUID\n      )?.sqlFieldName;\n      const link = {\n        ...entry,\n        parentColumnUUID,\n        newUUID: uuidv4(),\n        libUUID,\n        sqlTableName: libTemplate.sqlTableName,\n        columnParentName,\n      };\n      dispatch(addNewEntryLink(link));\n      clickEntryLinkHandler();\n    }\n  };\n  const CustomBox = ({ entry, children, clickHandler }) => {\n    return <div onClick={() => clickHandler(entry)}>{children}</div>;\n  };\n\n  return (\n    <>\n      {mode !== \"linking\" && <LibraryHeader library={library} mode={mode} />}\n      {mode === \"linking\" && (\n        <Header mode=\"empty\">\n          <IconButton\n            size=\"large\"\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"goBack\"\n            sx={{ mr: 2 }}\n            onClick={clickEntryLinkHandler}\n          >\n            <ArrowBackIcon />\n          </IconButton>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            {library.name}\n          </Typography>\n        </Header>\n      )}\n      <List\n        sx={{ width: \"100%\", bgcolor: \"primary\" }}\n        component=\"nav\"\n        aria-labelledby=\"nested-list-subheader\"\n        subheader={\n          <ListSubheader\n            component=\"div\"\n            id=\"nested-list-subheader\"\n            sx={{ backgroundColor: \"primary.light\" }}\n            data-testid={\"entriesList\"}\n          >\n            Entries List Items:\n          </ListSubheader>\n        }\n      >\n        {!libData?.rows.length > 0 && (\n          <ListItemButton>\n            <ListItemText primary=\"No entry yet\" />\n          </ListItemButton>\n        )}\n\n        {libData?.rows.map((entry) => (\n          <>\n            <CustomBox\n              key={entry.rowUUID}\n              entry={entry}\n              clickHandler={clickBoxHandler}\n            >\n              <ShortEntryView\n                entry={entry}\n                libUUID={libData.libUUID}\n                mode={mode}\n              />\n            </CustomBox>\n            <Divider />\n          </>\n        ))}\n      </List>\n    </>\n  );\n};\n\nexport default EntriesList;\n","import { TextField } from \"@mui/material\";\nimport { useDispatch } from \"react-redux\";\nimport { updateFieldValue } from \"../../store/editedEntry-slice\";\nimport { Typography } from \"@mui/material\";\n\nconst CInt = ({ field, mode }) => {\n  const dispatch = useDispatch();\n  const saveDataHandler = (e) => {\n    const data = {\n      columnUUID: field.columnUUID,\n      type: e.target.type,\n      checked: e.target.checked,\n      value: e.target.value,\n    };\n    dispatch(updateFieldValue(data));\n  };\n  const isEdit = mode === \"view\" ? false : true;\n\n  return (\n    <TextField\n      id={field.columnName.replaceAll(\" \", \"_\")}\n      data-testid={field.columnName.replaceAll(\" \", \"_\").toLowerCase()}\n      name={field.columnName}\n      label={\n        <Typography variant=\"headline\" component=\"h2\" color=\"black\">\n          {field.columnName}\n        </Typography>\n      }\n      focused\n      disabled={!isEdit}\n      type=\"number\"\n      defaultValue={field?.value}\n      onBlur={saveDataHandler}\n      sx={{ backgroundColor: isEdit ? \"primary.lighter\" : \"default\", mx: 2 }}\n    />\n  );\n};\nexport default CInt;\n","import CInt from \"./CInt\";\n\nconst CFloat = ({ field, mode }) => {\n  return <CInt field={field} mode={mode} />;\n};\nexport default CFloat;\n","import { TextField } from \"@mui/material\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { updateFieldValue } from \"../../store/editedEntry-slice\";\nimport { Typography } from \"@mui/material\";\n\nconst CString = ({ field, mode }) => {\n  const dispatch = useDispatch();\n  const saveDataHandler = (e) => {\n    const data = {\n      columnUUID: field.columnUUID,\n      type: e.target.type,\n      checked: e.target.checked,\n      value: e.target.value,\n    };\n    dispatch(updateFieldValue(data));\n  };\n\n  const isEdit = mode === \"view\" ? false : true;\n\n  return (\n    <TextField\n      id={field.columnName.replaceAll(\" \", \"_\")}\n      data-testid={field.columnName.replaceAll(\" \", \"_\").toLowerCase()}\n      name={field.columnName}\n      label={\n        <Typography variant=\"headline\" component=\"h2\" color=\"black\">\n          {field.columnName}\n        </Typography>\n      }\n      multiline\n      focused\n      maxRows={14}\n      disabled={!isEdit}\n      defaultValue={field?.value}\n      onBlur={saveDataHandler}\n      sx={{\n        backgroundColor: isEdit ? \"primary.lighter\" : \"default\",\n        width: \"95%\",\n        mx: 2,\n      }}\n    />\n  );\n};\n\nexport default CString;\n","import React, { Fragment, useState } from \"react\";\nimport { Camera, FACING_MODES } from \"react-html5-camera-photo\";\nimport \"react-html5-camera-photo/build/css/index.css\";\nimport classes from \"./CImage.module.css\";\n\nconst CImage = ({ field, mode }) => {\n  const [showCamera, setShowCamera] = useState(false);\n  const [images, setImages] = useState(String(field.value).split(\"\\n\"));\n\n  const handleTakePhoto = (dataUri) => {\n    console.log(\"takePhoto\", dataUri);\n    setImages([...images, dataUri]);\n    setShowCamera(false);\n  };\n  const deleteImageHandler = (idx) => {\n    const newImages = [...images];\n    newImages.splice(idx, 1);\n    setImages(newImages);\n  };\n\n  if (mode === \"edit\")\n    return (\n      <ul className={classes.list}>\n        {images.map(\n          (src, idx) =>\n            src.length > 5 && (\n              <li key={idx}>\n                <img src={src} alt=\"Wrong path\" width={325}></img>\n                <button onClick={() => deleteImageHandler(idx)}>X</button>\n              </li>\n            )\n        )}\n\n        {showCamera && (\n          <li key={9998}>\n            <Camera\n              isImageMirror={false}\n              idealFacingMode={FACING_MODES.ENVIRONMENT}\n              onTakePhoto={(dataUri) => {\n                handleTakePhoto(dataUri);\n              }}\n            />\n          </li>\n        )}\n        {!showCamera && (\n          <li key={9999}>\n            <button\n              onClick={() => {\n                setShowCamera(true);\n              }}\n            >\n              Camera\n            </button>\n            <button>Store</button>\n          </li>\n        )}\n      </ul>\n    );\n  if (!field?.value) return <div></div>;\n  return (\n    <Fragment>\n      {mode === \"view\" &&\n        images.map((src, idx) => (\n          <img src={src} alt=\"Wrong path\" width={325} key={idx}></img>\n        ))}\n    </Fragment>\n  );\n};\n\nexport default CImage;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { updateFieldValue } from \"../../store/editedEntry-slice\";\n\nconst CDate = ({ field, mode }) => {\n  const dispatch = useDispatch();\n  const saveDataHandler = (e) => {\n    const data = {\n      columnUUID: field.columnUUID,\n      type: e.target.type,\n      checked: e.target.checked,\n      value: e.target.value,\n    };\n    dispatch(updateFieldValue(data));\n  };\n\n  if (!field?.value) return <div></div>;\n  const date = new Date(field?.value);\n  const dateString = date.toISOString().replace(\"T\", \" \").split(\" \")[0];\n  if (mode === \"view\") return <div>{dateString}</div>;\n  else\n    return (\n      <input\n        type=\"date\"\n        id={field.columnUUID}\n        name={field.columnName}\n        onBlur={saveDataHandler}\n        defaultValue={dateString}\n      ></input>\n    );\n};\n\nexport default CDate;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { updateFieldValue } from \"../../store/editedEntry-slice\";\nimport TextField from \"@mui/material/TextField\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport DateTimePicker from \"@mui/lab/DateTimePicker\";\nimport { Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { isNotEmpty } from \"../../utils/utilsFunction\";\n\nconst checkIfValueIsDate = (value) => {\n  if (isNotEmpty(value)) return true;\n  else return false;\n};\n\nconst CDateTime = ({ field, mode }) => {\n  const [value, setValue] = useState(\n    checkIfValueIsDate(field?.value) ? new Date(JSON.parse(field?.value)) : null\n  );\n  const dispatch = useDispatch();\n  const saveDataHandler = () => {\n    const data = {\n      columnUUID: field.columnUUID,\n      type: \"dateTime\",\n      checked: \"\",\n      value: JSON.stringify(value),\n    };\n    dispatch(updateFieldValue(data));\n  };\n\n  useEffect(() => {\n    saveDataHandler();\n    // eslint-disable-next-line\n  }, [value]);\n  const isEdit = mode === \"view\" ? false : true;\n\n  return (\n    <Box\n      sx={{ mx: 2 }}\n      data-testid={field.columnName.replaceAll(\" \", \"_\").toLowerCase()}\n    >\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <DateTimePicker\n          renderInput={(props) => <TextField {...props} />}\n          value={value}\n          label={\n            <Typography variant=\"headline\" component=\"h2\" color=\"black\">\n              {field.columnName}\n            </Typography>\n          }\n          disabled={!isEdit}\n          onChange={(newValue) => setValue(newValue)}\n        />\n      </LocalizationProvider>\n    </Box>\n  );\n};\n\nexport default CDateTime;\n","export function isNotEmpty(value) {\n  if (!value) return false;\n  if (value === \"\") return false;\n  if (value === false) return false;\n  if (value === null) return false;\n  if (value === undefined) return false;\n  if (value === \"null\") return false;\n  value = value + \" \"; // check for a bunch of whitespace\n  if (value.replace(/^\\s\\s*/, \"\").replace(/\\s\\s*$/, \"\") === \"\") return false;\n  return true;\n}\n","import React from \"react\";\n\nconst CBarcode = ({ value }) => {\n  return <div>{value}</div>;\n};\n\nexport default CBarcode;\n","import React, { Fragment } from \"react\";\n\nconst CAudio = ({ field }) => {\n  if (!field?.value) return <div></div>;\n  const addresses = String(field.value).split(\"\\n\");\n  return (\n    <Fragment>\n      {addresses.map((src, idx) => (\n        <audio controls key={idx}>\n          <source src={src} type=\"audio/ogg\" />\n        </audio>\n      ))}\n    </Fragment>\n  );\n};\n\nexport default CAudio;\n","import { Checkbox, FormControlLabel, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { updateFieldValue } from \"../../store/editedEntry-slice\";\n\nconst CCheckbox = ({ field, mode }) => {\n  const dispatch = useDispatch();\n  const saveDataHandler = (e) => {\n    const data = {\n      columnUUID: field.columnUUID,\n      type: e.target.type,\n      checked: e.target.checked,\n      value: e.target.value,\n    };\n    dispatch(updateFieldValue(data));\n  };\n\n  const isDisabled = mode === \"view\" ? true : false;\n  const isChecked = field?.value === \"1\" ? true : false;\n  return (\n    <FormControlLabel\n      value=\"start\"\n      control={\n        <Checkbox\n          id={field.columnUUID}\n          data-testid={field.columnName.replaceAll(\" \", \"_\").toLowerCase()}\n          name={field.columnName}\n          checked={isChecked}\n          onChange={saveDataHandler}\n          disabled={isDisabled}\n          sx={{ backgroundColor: isDisabled ? \"default\" : \"primary.lighter\" }}\n          inputProps={{ \"aria-label\": \"controlled\" }}\n        />\n      }\n      label={\n        <Typography variant=\"headline\" component=\"h3\" color=\"black\">\n          {field.columnName}\n        </Typography>\n      }\n      labelPlacement=\"top\"\n    />\n  );\n};\n\nexport default CCheckbox;\n","import { FormControlLabel, MenuItem, Select, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { updateFieldValue } from \"../../store/editedEntry-slice\";\n\nconst CDropDownList = ({ field, mode, options }) => {\n  const dispatch = useDispatch();\n  const saveDataHandler = (e) => {\n    const data = {\n      columnUUID: field.columnUUID,\n      type: e.target.type,\n      checked: e.target.checked,\n      value: e.target.value,\n    };\n    dispatch(updateFieldValue(data));\n  };\n  const selectOptions = [\n    ...options,\n    { value: \"\", index: options?.length + 1 || 1 },\n  ];\n  const isDisabled = mode === \"view\" ? true : false;\n\n  return (\n    <FormControlLabel\n      value=\"start\"\n      control={\n        <Select\n          id={field.columnUUID}\n          data-testid={field.columnName.replaceAll(\" \", \"_\").toLowerCase()}\n          name={field.columnName}\n          disabled={isDisabled}\n          value={field?.value || \"\"}\n          sx={{ backgroundColor: isDisabled ? \"default\" : \"primary.lighter\" }}\n          onChange={saveDataHandler}\n          label=\"aga\"\n        >\n          {selectOptions?.map((option) => (\n            <MenuItem\n              value={option.value}\n              key={option.index}\n              data-testid={option.value.replaceAll(\" \", \"_\").toLowerCase()}\n            >\n              {option.value}\n            </MenuItem>\n          ))}\n        </Select>\n      }\n      label={\n        <Typography variant=\"headline\" component=\"h3\" color=\"black\">\n          {field.columnName}\n        </Typography>\n      }\n      labelPlacement=\"top\"\n    />\n  );\n};\n\nexport default CDropDownList;\n","import { Box } from \"@mui/system\";\nimport React from \"react\";\nimport EntriesList from \"./EntriesList\";\n\nconst style = {\n  position: \"fixed\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  maxHeight: 700,\n  bgcolor: \"primary.lighter\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n\n  overflow: \"auto\",\n};\n\nconst ModalEntriesList = ({ toggleShowModal, libUUID, columnUUID }) => {\n  return (\n    <Box sx={style}>\n      <EntriesList\n        libUUID={libUUID}\n        mode=\"linking\"\n        parentColumnUUID={columnUUID}\n        clickEntryLinkHandler={toggleShowModal}\n      ></EntriesList>\n    </Box>\n  );\n};\n\nexport default ModalEntriesList;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ModalEntriesList from \"../library/ModalEntriesList\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteEntryLink } from \"../../store/editedEntry-slice\";\nimport {\n  Collapse,\n  Divider,\n  IconButton,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n  Modal,\n} from \"@mui/material\";\nimport { ExpandLess, ExpandMore } from \"@mui/icons-material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { Box } from \"@mui/system\";\n\nconst LinkToEntry = ({ field, mode, columnTemplate }) => {\n  const dispatch = useDispatch();\n  const [showModal, setShowModal] = useState(false);\n  const [isLinkListOpen, setIsLinkListOpen] = useState(true);\n  const listLinkOpenHandler = () => {\n    setIsLinkListOpen(!isLinkListOpen);\n  };\n\n  const toggleShowModalHandler = () => {\n    setShowModal(!showModal);\n  };\n\n  const deleteHandler = (e, entryIndex) => {\n    e.preventDefault();\n    dispatch(deleteEntryLink({ columnUUID: field?.columnUUID, entryIndex }));\n  };\n\n  useEffect(() => {\n    if (showModal) {\n      document.body.style.overflow = \"hidden\";\n    } else {\n      document.body.style.overflow = \"unset\";\n    }\n  }, [showModal]);\n\n  let libUUID;\n  libUUID = columnTemplate?.options[0]?.dictionaryLibraryUUID;\n  const libName = columnTemplate?.options[0]?.dictionaryLibraryName;\n  const isEditMode = mode === \"edit\" || mode === \"addNewEntry\" ? true : false;\n\n  return (\n    <>\n      <ListItemButton onClick={listLinkOpenHandler}>\n        <ListItemText primary={libName} secondary=\"Link to entry\" />\n        {isLinkListOpen ? <ExpandLess /> : <ExpandMore />}\n      </ListItemButton>\n      <Divider />\n      <Collapse in={isLinkListOpen} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n          {field.entryLinks?.map((entryLink, idx) => (\n            <Box key={idx}>\n              <Link\n                to={{\n                  pathname: \"/library/entry\",\n                  state: {\n                    libUUID: entryLink?.libUUID,\n                    rowUUID: entryLink?.rowUUID,\n                    mode: \"view\",\n                  },\n                }}\n              >\n                <ListItem\n                  sx={{ pl: 6 }}\n                  secondaryAction={\n                    isEditMode && (\n                      <IconButton\n                        edge=\"end\"\n                        aria-label=\"delete\"\n                        data-testid={\n                          \"deleteLinkToEntry-\" +\n                          entryLink?.rowTitle.replaceAll(\" \", \"_\").toLowerCase()\n                        }\n                        onClick={(event) => deleteHandler(event, idx)}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    )\n                  }\n                >\n                  <ListItemText\n                    primary={entryLink?.rowTitle}\n                    data-testid={\n                      \"linkToEntry-\" +\n                      entryLink?.rowTitle.replaceAll(\" \", \"_\").toLowerCase()\n                    }\n                  />\n                </ListItem>\n              </Link>\n              <Divider variant=\"inset\" component=\"li\" />\n            </Box>\n          ))}\n          {isEditMode && (\n            <ListItemButton\n              sx={{ pl: 6 }}\n              onClick={toggleShowModalHandler}\n              data-testid={field.columnName.replaceAll(\" \", \"_\").toLowerCase()}\n            >\n              <ListItemIcon>\n                <AddIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Add from list\" />\n            </ListItemButton>\n          )}\n        </List>\n      </Collapse>\n      <Modal\n        open={showModal}\n        onClose={() => setShowModal(showModal)}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box>\n          <ModalEntriesList\n            toggleShowModal={toggleShowModalHandler}\n            libUUID={libUUID}\n            columnUUID={field?.columnUUID}\n          ></ModalEntriesList>\n        </Box>\n      </Modal>\n    </>\n  );\n};\n\nexport default LinkToEntry;\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@mui/material\";\n\nconst DialogQuestion = ({\n  isAlertOpen,\n  disagreeHandler,\n  agreeHandler,\n  title,\n  contentText,\n}) => {\n  return (\n    <Dialog\n      open={isAlertOpen}\n      onClose={disagreeHandler}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\" data-testid=\"dialogQuestionTitle\">\n        {title}\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          {contentText}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={disagreeHandler} data-testid=\"dialogQuestionDisagree\">\n          Disagree\n        </Button>\n        <Button\n          onClick={agreeHandler}\n          autoFocus\n          data-testid=\"dialogQuestionAgree\"\n        >\n          Agree\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default DialogQuestion;\n","import { IconButton } from \"@mui/material\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport Header from \"./Header\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteRowData } from \"../../store/librariesData-slice\";\nimport { useHistory } from \"react-router\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport DialogQuestion from \"../../UI/DialogQuestion\";\n\nconst DIALOG_QUESTION = {\n  title: \"Are you sure?\",\n  contentText: `Do you want delete this row data? This cannot be undone!`,\n};\n\nconst EntryViewHeader = ({ entry, setMode }) => {\n  const [isDeleteAlertOpen, setIsDeleteAlertOpen] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const editHandler = () => {\n    setMode(\"edit\");\n  };\n  const openDeleteRowAlertHandler = (e) => {\n    e.preventDefault();\n    setIsDeleteAlertOpen(true);\n  };\n  const closeDeleteAlertHandler = (e) => {\n    e.preventDefault();\n    setIsDeleteAlertOpen(false);\n  };\n\n  const deleteRowHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      deleteRowData({ libUUID: entry?.libUUID, rowUUID: entry?.rowUUID })\n    );\n\n    history.goBack();\n  };\n\n  return (\n    <Header title={entry?.title}>\n      <IconButton\n        size=\"large\"\n        edge=\"end\"\n        color=\"inherit\"\n        aria-label=\"edit\"\n        data-testid=\"edit\"\n        sx={{ mr: 1 }}\n        onClick={editHandler}\n      >\n        <EditIcon />\n      </IconButton>\n\n      <IconButton\n        size=\"large\"\n        edge=\"end\"\n        color=\"inherit\"\n        aria-label=\"delete\"\n        data-testid=\"delete\"\n        sx={{ mr: 1 }}\n        onClick={openDeleteRowAlertHandler}\n      >\n        <DeleteIcon />\n      </IconButton>\n\n      <DialogQuestion\n        isAlertOpen={isDeleteAlertOpen}\n        disagreeHandler={closeDeleteAlertHandler}\n        agreeHandler={deleteRowHandler}\n        title={DIALOG_QUESTION.title}\n        contentText={DIALOG_QUESTION.contentText}\n      />\n    </Header>\n  );\n};\n\nexport default EntryViewHeader;\n","import { IconButton, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport Header from \"./Header\";\nimport DoneIcon from \"@mui/icons-material/Done\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\n\nconst EntryEditHeader = ({ setMode, actionButtonHandler }) => {\n  const { cancelHandler, saveHandler, setIsSnackbarOpen } = actionButtonHandler;\n  const cancelButtonHandler = () => {\n    setMode(\"view\");\n    cancelHandler();\n  };\n\n  const saveButtonHandler = () => {\n    setMode(\"view\");\n    saveHandler();\n    setIsSnackbarOpen(true);\n  };\n\n  return (\n    <Header mode=\"empty\">\n      <IconButton\n        data-testid=\"saveEntry\"\n        size=\"large\"\n        edge=\"start\"\n        color=\"inherit\"\n        aria-label=\"save\"\n        sx={{ mr: 2 }}\n        onClick={saveButtonHandler}\n      >\n        <DoneIcon />\n      </IconButton>\n      <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n        Edit\n      </Typography>\n      <IconButton\n        data-testid=\"cancelEntry\"\n        size=\"large\"\n        edge=\"end\"\n        color=\"inherit\"\n        aria-label=\"cancel\"\n        sx={{ mr: 2 }}\n        onClick={cancelButtonHandler}\n      >\n        <ClearIcon />\n      </IconButton>\n    </Header>\n  );\n};\n\nexport default EntryEditHeader;\n","import { gql } from \"@apollo/client\";\nexport const GET_LIBRARIES_TEMPLATES = gql`\n  query {\n    librariesTemplates {\n      name\n      id\n      libUUID\n      sqlTableName\n      columns {\n        type\n        name\n        order\n        description\n        defaultValue\n        columnUUID\n        usage\n        sqlFieldName\n        sqlFieldType\n        options {\n          value\n          index\n          default\n          dictionaryLibraryUUID\n          dictionaryLibraryName\n          script\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_LIBRARIES_DATA = gql`\n  query {\n    librariesData {\n      name\n      id\n      libUUID\n      rows {\n        rowUUID\n        uniqueName\n        creationDate\n        modificationDate\n        columns {\n          value\n          columnName\n          columnUUID\n          entryLinks {\n            libUUID\n            uniqueName\n            rowUUID\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_LIBRARIES_DATA_PG = gql`\n  query {\n    librariesDataPG {\n      name\n      id\n      libUUID\n      rows {\n        rowUUID\n        fe_title\n        fe_description\n        rowJSON\n      }\n    }\n  }\n`;\n\nexport const UPDATE_LIBRARY_ROWS_PG = gql`\n  mutation updateLibraryRowsData($libraryData: LibraryDataInput) {\n    updateLibraryRowsData(libraryDataInput: $libraryData)\n  }\n`;\n\nexport const ADD_LIBRARY_ROWS_PG = gql`\n  mutation addLibraryRowsData($libraryData: LibraryDataInput) {\n    addLibraryRowsData(libraryDataInput: $libraryData)\n  }\n`;\n\nexport const ADD_LIBRARY_TEMPLATE_PG = gql`\n  mutation addLibraryTemplate($libraryTemplate: LibraryTemplateInput) {\n    addLibraryTemplate(libraryTemplateInput: $libraryTemplate)\n  }\n`;\nexport const UPDATE_LIBRARY_TEMPLATE_PG = gql`\n  mutation updateLibraryTemplate($libraryTemplate: LibraryTemplateInput) {\n    updateLibraryTemplate(libraryTemplateInput: $libraryTemplate)\n  }\n`;\n","import { useScriptField } from \"../../hooks/useField\";\n\nconst CScript = ({ mode, field, columnTemplate }) => {\n  const { status, value, error } = useScriptField(\n    columnTemplate?.options[0]?.script,\n    columnTemplate?.type\n  );\n\n  if (status === \"success\") return <div>{value}</div>;\n  else return <div> {error} </div>;\n};\n\nexport default CScript;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  conf: {\n    storageType: \"localStorage\",\n    isFirstStart: true,\n  },\n};\n\nexport const configurationSlice = createSlice({\n  name: \"configuration\",\n  initialState,\n  reducers: {\n    updateConfiguration(state, action) {\n      state.conf = action.payload;\n    },\n  },\n});\n\nexport const { updateConfiguration } = configurationSlice.actions;\n\nexport default configurationSlice.reducer;\n\nexport const selectConfiguration = (state) => state.configuration.conf;\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectLibraryById } from \"../../store/templateLibraries-slice\";\nimport {\n  updateEntryValues,\n  selectAllFields,\n  clearState,\n} from \"../../store/editedEntry-slice\";\nimport CFloat from \"../fieldTypes/CFloat\";\nimport CInt from \"../fieldTypes/CInt\";\nimport CString from \"../fieldTypes/CString\";\nimport CImage from \"../fieldTypes/CImage\";\nimport CDate from \"../fieldTypes/CDate\";\nimport CDateTime from \"../fieldTypes/CDateTime\";\nimport CBarcode from \"../fieldTypes/CBarcode\";\nimport CAudio from \"../fieldTypes/CAudio\";\nimport CCheckbox from \"../fieldTypes/CCheckbox\";\nimport CDropDownList from \"../fieldTypes/CDropDownList\";\nimport LinkToEntry from \"../fieldTypes/LinkToEntry\";\nimport EntryViewHeader from \"./EntryViewHeader\";\nimport { useLocation } from \"react-router-dom\";\nimport EntryEditHeader from \"./EntryEditHeader\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  getRowDataById,\n  updateLibraryRecord,\n  addNewLibraryRecord,\n} from \"../../store/librariesData-slice\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useMutation } from \"@apollo/client\";\nimport {\n  UPDATE_LIBRARY_ROWS_PG,\n  ADD_LIBRARY_ROWS_PG,\n} from \"../../API/graphQLTypes\";\nimport CScript from \"../fieldTypes/CScript\";\nimport { selectConfiguration } from \"../../store/configuration-slice\";\nimport { Alert, Divider, Grid, Snackbar } from \"@mui/material\";\n\nconst setComponentByType = (column, field, mode, options) => {\n  switch (column.type) {\n    case \"string\":\n      return <CString mode={mode} field={field}></CString>;\n    case \"float\":\n      return <CFloat mode={mode} field={field}></CFloat>;\n    case \"int\":\n      return <CInt mode={mode} field={field}></CInt>;\n    case \"image\":\n      return <CImage value={field.value} mode={mode} field={field}></CImage>;\n    case \"date\":\n      return <CDate mode={mode} field={field}></CDate>;\n    case \"dateTime\":\n      return <CDateTime mode={mode} field={field}></CDateTime>;\n    case \"barcode\":\n      return (\n        <CBarcode value={field.value} mode={mode} field={field}></CBarcode>\n      );\n    case \"audio\":\n      return <CAudio value={field.value} mode={mode} field={field}></CAudio>;\n    case \"checkbox\":\n      return <CCheckbox mode={mode} field={field}></CCheckbox>;\n    case \"dropDownList\":\n      return (\n        <CDropDownList\n          mode={mode}\n          field={field}\n          options={options}\n        ></CDropDownList>\n      );\n    case \"libEntry\":\n      return (\n        <LinkToEntry\n          mode={mode}\n          field={field}\n          columnTemplate={column}\n        ></LinkToEntry>\n      );\n    case \"script\":\n      return (\n        <CScript mode={mode} field={field} columnTemplate={column}></CScript>\n      );\n    default:\n      return <div>----</div>;\n  }\n};\n\nconst SingleEntryPage = () => {\n  const location = useLocation();\n  let libUUID = location.state?.libUUID;\n  let rowUUID = location.state?.rowUUID;\n  if (!libUUID) {\n    const entryViewConfigJson = localStorage.getItem(\"entryViewConfig\");\n    libUUID = JSON.parse(entryViewConfigJson).libUUID;\n    rowUUID = JSON.parse(entryViewConfigJson).rowUUID;\n  }\n  const dispatch = useDispatch();\n  const storageType = useSelector((state) =>\n    selectConfiguration(state)\n  )?.storageType;\n  const [isSnackbarOpen, setIsSnackbarOpen] = useState(false);\n  const [updateEntryInPG] = useMutation(UPDATE_LIBRARY_ROWS_PG);\n  const [addEntryInPG] = useMutation(ADD_LIBRARY_ROWS_PG);\n\n  const [mode, setMode] = useState(\n    location?.state?.mode === \"addNewEntry\" ? \"addNewEntry\" : \"view\"\n  );\n  const { columns: columnsTemplates, sqlTableName } =\n    useSelector((state) => selectLibraryById(state, libUUID)) || {};\n  const row = useSelector((state) =>\n    getRowDataById(state, { rowUUID, libUUID })\n  );\n\n  const entry = { title: row?.fe_title, libUUID, rowUUID, mode };\n\n  const fieldsInit = columnsTemplates?.map((columnTemplate) => {\n    let options = [];\n    let fieldValue = row ? row[columnTemplate.sqlFieldName] : null;\n    if (columnTemplate?.type === \"libEntry\") {\n      options = columnTemplate?.options[0]?.dictionaryLibraryName;\n      fieldValue = row ? fieldValue : {};\n    } else if (columnTemplate?.type === \"dropDownList\")\n      options = columnTemplate?.options;\n    return {\n      type: columnTemplate?.type,\n      name: columnTemplate?.name,\n      order: columnTemplate?.order,\n      columnTemplate: columnTemplate,\n      options,\n      field: {\n        value: fieldValue,\n        columnUUID: columnTemplate?.columnUUID,\n        columnName: columnTemplate?.name,\n        entryLinks: row ? row[columnTemplate.sqlFieldName]?.entrylinks : [],\n      },\n    };\n  });\n  useEffect(() => {\n    dispatch(updateEntryValues(fieldsInit));\n    return () => {\n      console.log(\"clear state after dismount component\");\n      dispatch(clearState());\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\n      \"entryViewConfig\",\n      JSON.stringify({ rowUUID, libUUID, mode })\n    );\n    dispatch(updateEntryValues(fieldsInit));\n    // eslint-disable-next-line\n  }, [rowUUID, libUUID, columnsTemplates]);\n\n  const cancelHandler = () => {\n    dispatch(updateEntryValues(fieldsInit));\n  };\n  const saveHandler = () => {\n    const savedRowUUID = mode === \"addNewEntry\" ? uuidv4() : rowUUID;\n    const editedEntry = {\n      editedFields: fields,\n      libUUID,\n      rowUUID: savedRowUUID,\n    };\n\n    if (mode === \"addNewEntry\") {\n      sendInsertedDataToDatabase(fields, savedRowUUID);\n      dispatch(addNewLibraryRecord(editedEntry));\n    } else {\n      sendUpdatedDataToDatabase(fields);\n      dispatch(updateLibraryRecord(editedEntry));\n    }\n  };\n\n  const prepareDataForSendToPG = (updatedEntry, savedRowUUID) => {\n    const getValue = (field) => {\n      if (!field?.hasOwnProperty(\"value\")) return null;\n      if (field?.value?.hasOwnProperty(\"value\")) return field?.value?.value;\n      return field?.value;\n    };\n    const columns = updatedEntry.map((col) => {\n      const entryLinks = col.field?.entryLinks?.map((link) => {\n        return {\n          columnParentName: link.columnParentName\n            ? link.columnParentName\n            : col.columnTemplate.sqlFieldName,\n          libUUID: link.libUUID,\n          rowUUID: link.rowUUID,\n          tableName: link.tableName,\n          uuid: col.field.value.value,\n          tableParentName: sqlTableName,\n          rowParentUUID: savedRowUUID ? savedRowUUID : rowUUID,\n        };\n      });\n      return {\n        sqlFieldName: col?.columnTemplate?.sqlFieldName,\n        value: getValue(col?.field),\n        type: col?.columnTemplate?.type,\n        entryLinks,\n      };\n    });\n    const rows = [\n      {\n        rowUUID: savedRowUUID ? savedRowUUID : rowUUID,\n        rowJSON: JSON.stringify(columns),\n      },\n    ];\n\n    const libData = { sqlTableName: sqlTableName, libUUID, rows };\n\n    return libData;\n  };\n\n  const sendInsertedDataToDatabase = (updatedEntry, savedRowUUID) => {\n    try {\n      const libData = prepareDataForSendToPG(updatedEntry, savedRowUUID);\n      if (storageType === \"outerDatabase\")\n        addEntryInPG({ variables: { libraryData: libData } });\n    } catch (error) {\n      console.log(\"error occurred while adding entry to db: \" + error);\n    }\n  };\n\n  const sendUpdatedDataToDatabase = (insertedEntry) => {\n    try {\n      const libData = prepareDataForSendToPG(insertedEntry);\n\n      if (storageType === \"outerDatabase\")\n        updateEntryInPG({ variables: { libraryData: libData } });\n    } catch (error) {\n      console.log(\"error occurred while updating entry: \" + error);\n    }\n  };\n\n  const fields = useSelector((state) => selectAllFields(state));\n\n  const snackbarCloseHandle = (event, reason) => {\n    if (reason === \"clickaway\") return;\n    setIsSnackbarOpen(false);\n  };\n\n  const isEditMode = mode === \"edit\" || mode === \"addNewEntry\" ? true : false;\n  return (\n    <Fragment>\n      {mode === \"view\" && <EntryViewHeader entry={entry} setMode={setMode} />}\n      {isEditMode && (\n        <EntryEditHeader\n          entry={entry}\n          setMode={setMode}\n          actionButtonHandler={{\n            cancelHandler,\n            saveHandler,\n            setIsSnackbarOpen,\n          }}\n        />\n      )}\n      <Grid container spacing={1}>\n        {fields?.map((field) => {\n          return (\n            <Grid item xs={12} sx={{ m: 1 }} key={field?.field?.columnUUID}>\n              {setComponentByType(\n                field.columnTemplate,\n                field.field,\n                mode,\n                field.options\n              )}\n              <Divider />\n            </Grid>\n          );\n        })}\n      </Grid>\n      <Snackbar\n        open={isSnackbarOpen}\n        autoHideDuration={5000}\n        onClose={snackbarCloseHandle}\n      >\n        <Alert\n          onClose={snackbarCloseHandle}\n          severity=\"success\"\n          sx={{ width: \"100%\" }}\n        >\n          Entry saved successfully!\n        </Alert>\n      </Snackbar>\n    </Fragment>\n  );\n};\n\nexport default SingleEntryPage;\n","import { MenuItem } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { deleteLibraryData } from \"../../store/librariesData-slice\";\nimport { deleteLibraryTemplate } from \"../../store/templateLibraries-slice\";\nimport DialogQuestion from \"../../UI/DialogQuestion\";\n\nconst DIALOG_QUESTION = {\n  title: \"Are you sure?\",\n  contentText: ` Do you want delete this library template with data? This can't be\n  undone.`,\n};\n\nconst LibraryTileOptions = ({ libUUID, closeMenu }) => {\n  const history = useHistory();\n  const [isDeleteAlertOpen, setIsDeleteAlertOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  const editHandler = (e) => {\n    e.preventDefault();\n    history.push({\n      pathname: \"/creator\",\n      state: { libUUID },\n    });\n  };\n\n  const deleteLibraryHandler = (e) => {\n    e.preventDefault();\n    closeMenu(e);\n    dispatch(deleteLibraryData({ libUUID }));\n    dispatch(deleteLibraryTemplate({ libUUID }));\n    setIsDeleteAlertOpen(false);\n  };\n\n  const openDeleteAlertHandler = (e) => {\n    e.preventDefault();\n    setIsDeleteAlertOpen(true);\n  };\n  const closeDeleteAlertHandler = (e) => {\n    e.preventDefault();\n    closeMenu(e);\n    setIsDeleteAlertOpen(false);\n  };\n\n  return (\n    <>\n      <MenuItem onClick={editHandler} data-testid=\"libraryMenuEditTemplate\">\n        Edit template\n      </MenuItem>\n      <MenuItem\n        onClick={openDeleteAlertHandler}\n        data-testid=\"libraryMenuDelete\"\n      >\n        Delete lib\n      </MenuItem>\n      <DialogQuestion\n        isAlertOpen={isDeleteAlertOpen}\n        disagreeHandler={closeDeleteAlertHandler}\n        agreeHandler={deleteLibraryHandler}\n        title={DIALOG_QUESTION.title}\n        contentText={DIALOG_QUESTION.contentText}\n      />\n    </>\n  );\n};\n\nexport default LibraryTileOptions;\n","import React from \"react\";\nimport LibraryTileOptions from \"../buttons/LibraryTileOptions\";\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  IconButton,\n  CardContent,\n  Typography,\n  CardMedia,\n  CardActions,\n  Menu,\n} from \"@mui/material\";\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { useState } from \"react\";\n\nconst src = \"https://img.icons8.com/ios/452/field.png\";\n\nconst LibraryTile = ({ library }) => {\n  const history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const isMenuOpened = Boolean(anchorEl);\n  const handleOpenMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n    event.preventDefault();\n  };\n  const handleCloseMenu = (event) => {\n    setAnchorEl(null);\n    event.preventDefault();\n  };\n\n  const addNewEntryHandler = (event) => {\n    event.preventDefault();\n    history.push({\n      pathname: \"/library/entry\",\n      state: { libUUID: library?.libUUID, mode: \"addNewEntry\", rowUUID: null },\n    });\n  };\n\n  return (\n    <Link\n      to={{\n        pathname: \"/library\",\n        state: { libUUID: library?.libUUID },\n      }}\n    >\n      <Card sx={{ maxWidth: 200, m: 1, backgroundColor: \"primary.light\" }}>\n        <CardHeader\n          avatar={\n            <CardMedia\n              image={src}\n              width=\"30\"\n              component=\"img\"\n              sx={{ maxWidth: 50 }}\n            />\n          }\n          action={\n            <IconButton\n              id=\"additional-action-button\"\n              aria-controls=\"additional-action-menu\"\n              aria-haspopup=\"true\"\n              aria-expanded={isMenuOpened ? \"true\" : undefined}\n              onClick={handleOpenMenu}\n              data-testid={`libraryMenu-${library?.name.toLowerCase()}`}\n            >\n              <MoreVertIcon />\n            </IconButton>\n          }\n          title=\"\"\n          subheader=\"\"\n        />\n        <Menu\n          id=\"additional-action-menu\"\n          aria-labelledby=\"additional-action-button\"\n          anchorEl={anchorEl}\n          open={isMenuOpened}\n          onClose={handleCloseMenu}\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\",\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\",\n          }}\n        >\n          <LibraryTileOptions\n            closeMenu={handleCloseMenu}\n            libUUID={library?.libUUID}\n          />\n        </Menu>\n        <CardContent>\n          <Typography variant=\"body1\" color=\"initial\">\n            {library?.name}\n          </Typography>\n          <Typography variant=\"body2\" color=\"initial\">\n            Entries: {library?.entriesCount}\n          </Typography>\n          <Typography variant=\"body3\" color=\"initial\">\n            {library?.lastModification}\n          </Typography>\n        </CardContent>\n        <CardActions disableSpacing>\n          <IconButton\n            id={\"addNewEntryIn\" + library?.name}\n            size=\"large\"\n            variant=\"\"\n            edge=\"end\"\n            color=\"primary\"\n            aria-label=\"home\"\n            sx={{\n              mr: 1,\n              ml: \"auto\",\n              backgroundColor: \"primary.main\",\n              color: \"primary.dark\",\n              \"&:hover\": {\n                backgroundColor: \"secondary.light\",\n              },\n            }}\n            onClick={addNewEntryHandler}\n          >\n            <AddIcon />\n          </IconButton>\n        </CardActions>\n      </Card>\n    </Link>\n  );\n};\n\nexport default LibraryTile;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport classes from \"./LibrariesList.module.css\";\nimport LibraryTile from \"./LibraryTile\";\n\nconst LibrariesList = () => {\n  const libraries = useSelector((state) => state.librariesTemplate);\n  if (!libraries) return <div>...loading</div>;\n  return (\n    <ul className={classes.list}>\n      {libraries.map((lib) => {\n        return (\n          <li\n            key={lib.libUUID}\n            data-testid={\"lib-\" + lib.name.replaceAll(\" \", \"_\").toLowerCase()}\n          >\n            <LibraryTile library={lib} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default LibrariesList;\n","import { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectLibrariesInfo } from \"../../store/templateLibraries-slice\";\nimport classes from \"./LinkToLibraryField.module.css\";\n\nconst LinkToLibraryField = ({ setOptions, options: defaultOptions }) => {\n  const librariesInfo = useSelector((state) => selectLibrariesInfo(state));\n\n  const getOptionValue = () => {\n    if (!defaultOptions || defaultOptions?.length < 1) return [];\n    return librariesInfo.find(\n      (lib) => lib?.libUUID === defaultOptions[0]?.dictionaryLibraryUUID\n    )?.sqlTableName;\n  };\n  const [chosenLibrary, setChosenLibrary] = useState(getOptionValue());\n\n  const applyOptions = (index) => {\n    if (librariesInfo.length <= index) return;\n    const options = [\n      {\n        dictionaryLibraryName: librariesInfo[index].name,\n        dictionaryLibraryUUID: librariesInfo[index].libUUID,\n      },\n    ];\n    setOptions(options);\n  };\n\n  useEffect(() => {\n    if (librariesInfo.length) applyOptions(0);\n    // eslint-disable-next-line\n  }, [librariesInfo]);\n\n  const chooseLibHandler = (e) => {\n    const idx = e.target.selectedIndex;\n    applyOptions(idx);\n    setChosenLibrary(e.target.value);\n  };\n\n  return (\n    <div className={classes.main}>\n      Choose library from list\n      <select onChange={chooseLibHandler} defaultValue={chosenLibrary}>\n        {librariesInfo.map((lib) => (\n          <option key={lib.libUUID} value={lib.sqlTableName}>\n            {lib.name}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\nexport default LinkToLibraryField;\n","import { Fragment, useState } from \"react\";\nimport classes from \"./SelectField.module.css\";\n\nconst SelectField = ({ setOptions, options }) => {\n  const [points, setPoints] = useState(options || []);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [pointName, setPointName] = useState(\"\");\n  const [isDefault, setIsDefault] = useState(false);\n\n  const addPointHandler = (e) => {\n    e.preventDefault();\n    const point = {\n      default: points.find((point) => point.default) ? false : isDefault,\n      index: points.length + 1,\n      value: pointName,\n    };\n    if (pointName) {\n      const newPoints = [...points, point];\n      setPoints([...points, point]);\n      setOptions(newPoints);\n    }\n    setPointName();\n    setShowAddModal(false);\n    setIsDefault(false);\n  };\n  const removePointFromListHandler = (e, index) => {\n    e.preventDefault();\n    const newPointsList = [...points];\n    newPointsList.splice(index, 1);\n    setPoints(newPointsList);\n  };\n\n  return (\n    <Fragment>\n      <div>\n        Point list:\n        <ul className={classes.ul}>\n          {points.map((point, idx) => {\n            return (\n              <li key={idx} className={classes.list}>\n                {point.value} {point.default ? \"✔\" : null}\n                <button onClick={(e) => removePointFromListHandler(e, idx)}>\n                  &#10005;\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n        {showAddModal && (\n          <div className={classes.modal}>\n            <header className={classes.header}>\n              <button\n                onClick={() => {\n                  setShowAddModal(false);\n                }}\n              >\n                &larr;\n              </button>\n              <button onClick={addPointHandler}>&#10003;</button>\n            </header>\n            <label htmlFor=\"pointName\">Point name:</label>\n            <input\n              type=\"text\"\n              id=\"pointName\"\n              defaultValue={pointName}\n              onChange={(e) => setPointName(e.target.value)}\n            ></input>\n            <label htmlFor=\"isDefault\">Is point Default?</label>\n            <input\n              type=\"checkbox\"\n              id=\"isDefault\"\n              defaultChecked={isDefault}\n              onChange={(e) => setIsDefault(e.target.checked)}\n            ></input>\n          </div>\n        )}\n        <button\n          onClick={(e) => {\n            setShowAddModal(true);\n            e.preventDefault();\n          }}\n        >\n          Add\n        </button>\n        {showAddModal && <div className={classes.backdrop}></div>}\n      </div>\n    </Fragment>\n  );\n};\n\nexport default SelectField;\n","import { Fragment, useState } from \"react\";\nimport LinkToLibraryField from \"./LinkToLibraryField\";\nimport SelectField from \"./SelectField\";\nimport classes from \"./TemplateFieldCreator.module.css\";\n\nconst prepareSqlFieldName = (name) => {\n  let preparedName = name\n    .replaceAll(\"  \", \" \")\n    .replaceAll(\" \", \"_\")\n    .toLowerCase();\n  return preparedName;\n};\n\nconst getScriptCode = (column) => {\n  const jsonString = column?.options[0]?.script;\n  const script = JSON.parse(jsonString);\n\n  return script.expr;\n};\n\nconst TemplateFieldCreator = ({\n  saveFieldConfigHandler,\n  fieldConfigTemplate,\n  cancelModal,\n  fieldConfig: fieldConfigForUpdate,\n}) => {\n  const availableFieldTypes = [\n    { name: \"Text\", type: \"string\" },\n    { name: \"Float\", type: \"float\" },\n    { name: \"Int\", type: \"int\" },\n    { name: \"Image\", type: \"image\" },\n    { name: \"Audio\", type: \"audio\" },\n    { name: \"Date time\", type: \"dateTime\" },\n    { name: \"Checkbox\", type: \"checkbox\" },\n    { name: \"Script\", type: \"script\" },\n    { name: \"Dropdown list\", type: \"dropDownList\" },\n    { name: \"Link to library\", type: \"libEntry\" },\n  ];\n\n  const availableFieldViewOptions = [\n    { name: \"Normal\", type: \"normal\" },\n    { name: \"Title\", type: \"title\" },\n    { name: \"Description\", type: \"description\" },\n    { name: \"Status\", type: \"status\" },\n  ];\n\n  const getFieldType = () => {\n    return availableFieldTypes.find(\n      (fieldType) => fieldType.type === fieldConfig[\"type\"]\n    )?.type;\n  };\n\n  const fieldConfigInit = {\n    usage: availableFieldViewOptions[0].type,\n  };\n  const [fieldConfig, setFieldConfig] = useState(\n    fieldConfigForUpdate || fieldConfigInit\n  );\n  const [fieldType, setFieldType] = useState(\n    getFieldType() || availableFieldTypes[0].type\n  );\n  const [fieldOptions, setFieldOptions] = useState(fieldConfig.options || []);\n\n  const setOptions = (options) => {\n    setFieldOptions(options);\n  };\n\n  const getValueFromElement = (element) => {\n    if (element.type === \"checkbox\") return element.checked ? 1 : 0;\n    return element.value;\n  };\n\n  const saveScriptCodeHandler = (e) => {\n    const options = [];\n    const jsonString = fieldConfig?.options[0]?.script;\n    const script = JSON.parse(jsonString);\n    script.expr = e.target.value;\n    options[0] = { script: JSON.stringify(script) };\n    setFieldOptions(options);\n  };\n\n  const setInputValueHandler = (e) => {\n    setFieldConfig((prevFieldConfig) => {\n      return {\n        ...prevFieldConfig,\n        [e.target.id]: getValueFromElement(e.target),\n      };\n    });\n  };\n\n  const submitHandle = (e) => {\n    e.preventDefault();\n    console.log(e.target);\n    const fieldConfigTmp = { ...fieldConfig };\n    fieldConfigTmp.type = fieldType;\n    fieldConfigTmp.sqlFieldName = prepareSqlFieldName(fieldConfigTmp.name);\n    fieldConfigTmp.options = fieldOptions;\n\n    saveFieldConfigHandler(fieldConfigTmp);\n  };\n\n  const hintField = (fieldType) => {\n    if (\n      fieldType === \"checkbox\" ||\n      fieldType === \"dropDownList\" ||\n      fieldType === \"libEntry\" ||\n      fieldType === \"script\"\n    )\n      return null;\n    return (\n      <Fragment>\n        <label htmlFor=\"description\">Hint:</label>\n        <input\n          type=\"text\"\n          id=\"description\"\n          onBlur={setInputValueHandler}\n          defaultValue={fieldConfig[\"description\"]}\n        />\n      </Fragment>\n    );\n  };\n\n  const defaultValueField = (fieldType) => {\n    if (\n      fieldType === \"dropDownList\" ||\n      fieldType === \"libEntry\" ||\n      fieldType === \"script\"\n    )\n      return null;\n    if (fieldType === \"checkbox\")\n      return (\n        <Fragment>\n          <label htmlFor=\"defaultValue\">Default value:</label>\n          <input\n            type=\"checkbox\"\n            id=\"defaultValue\"\n            onChange={setInputValueHandler}\n            defaultChecked={fieldConfig[\"defaultValue\"]}\n          />\n        </Fragment>\n      );\n\n    return (\n      <Fragment>\n        <label htmlFor=\"defaultValue\">Default value:</label>\n        <input\n          type=\"text\"\n          id=\"defaultValue\"\n          onBlur={setInputValueHandler}\n          defaultValue={fieldConfig[\"defaultValue\"]}\n        />\n      </Fragment>\n    );\n  };\n\n  console.log(\"aviableTypesFound! \", getFieldType(), fieldConfig[\"type\"]);\n\n  return (\n    <Fragment>\n      <div className={classes.modal}>\n        <div className={classes.container}>\n          <header className={classes.header}>\n            <button id=\"cancelFields\" onClick={cancelModal}>\n              &larr;\n            </button>\n            <button id=\"submitFields\" onClick={submitHandle}>\n              &#10003;\n            </button>\n          </header>\n          <h2>Field Creator</h2>\n          {\n            <section className={classes.type}>\n              <label htmlFor=\"field\">Field type:</label>\n              <select\n                name=\"field\"\n                id=\"field\"\n                onChange={(e) => setFieldType(e.target.value)}\n                defaultValue={fieldType}\n              >\n                {availableFieldTypes.map((availableType) => {\n                  return (\n                    <option key={availableType.type} value={availableType.type}>\n                      {availableType.name}\n                    </option>\n                  );\n                })}\n              </select>\n            </section>\n          }\n          {fieldType && (\n            <form className={classes.form}>\n              <label htmlFor=\"name\">Field Name:</label>\n              <input\n                type=\"text\"\n                id=\"name\"\n                onBlur={setInputValueHandler}\n                defaultValue={fieldConfig[\"name\"]}\n              />\n              <label htmlFor=\"sqlFieldType\">Field sql type:</label>\n              <input\n                type=\"text\"\n                id=\"sqlFieldType\"\n                onBlur={setInputValueHandler}\n                defaultValue={fieldConfig[\"sqlFieldType\"]}\n              />\n              {hintField(fieldType)}\n              {defaultValueField(fieldType)}\n              {fieldType === \"dropDownList\" && (\n                <SelectField\n                  setOptions={setOptions}\n                  options={fieldConfig.options}\n                />\n              )}\n              {fieldType === \"libEntry\" && (\n                <LinkToLibraryField\n                  setOptions={setOptions}\n                  options={fieldConfig.options}\n                />\n              )}\n              {fieldType === \"script\" && (\n                <Fragment>\n                  <label htmlFor=\"script\"> Script code </label>\n                  <textarea\n                    defaultValue={getScriptCode(fieldConfig)}\n                    rows={20}\n                    onBlur={saveScriptCodeHandler}\n                  ></textarea>\n                </Fragment>\n              )}\n\n              <label htmlFor=\"usage\">Field view:</label>\n              <select\n                id=\"usage\"\n                name=\"usage\"\n                onChange={setInputValueHandler}\n                defaultValue={fieldConfig[\"usage\"]}\n              >\n                {availableFieldViewOptions.map((option) => {\n                  return (\n                    <option key={option.type} value={option.type}>\n                      {option.name}\n                    </option>\n                  );\n                })}\n              </select>\n            </form>\n          )}\n        </div>\n      </div>\n      <div className={classes.backdrop}></div>\n    </Fragment>\n  );\n};\n\nexport default TemplateFieldCreator;\n","import classes from \"./TemplateFieldBox.module.css\";\n\nconst TemplateFieldBox = ({ fieldConfig, editField }) => {\n  return (\n    <li\n      key={fieldConfig.columnUUID}\n      className={classes.box}\n      onClick={() => editField(fieldConfig.columnUUID)}\n    >\n      <div className={classes.leftSide}>\n        <div> {fieldConfig.name} </div>\n        <div className={classes.description}>\n          <div> {fieldConfig.type}</div>\n          {fieldConfig.options.length > 0 && (\n            <div className={classes.libName}>\n              &emsp; {fieldConfig.options[0].dictionaryLibraryName}\n            </div>\n          )}\n        </div>\n      </div>\n      <div> {fieldConfig.usage}</div>\n    </li>\n  );\n};\n\nexport default TemplateFieldBox;\n","import { useState, useEffect } from \"react\";\nimport TemplateFieldCreator from \"./TemplateFieldCreator\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport TemplateFieldBox from \"./TemplateFieldBox\";\nimport classes from \"./TemplateFields.module.css\";\n\nconst TemplateFields = ({ saveFieldsConfigHandler, fields }) => {\n  const [fieldsConfig, setFieldsConfig] = useState(fields || []);\n  const [mode, setMode] = useState(\"view\");\n  const [fieldConfig, setFieldConfig] = useState();\n\n  useEffect(() => {\n    saveFieldsConfigHandler(fieldsConfig);\n    // eslint-disable-next-line\n  }, [fieldsConfig]);\n\n  const addFieldConfig = (fieldConfig) => {\n    if (!fieldConfig?.columnUUID) fieldConfig.columnUUID = uuidv4();\n\n    setFieldsConfig((prev) => [...prev, fieldConfig]);\n    setMode(\"view\");\n  };\n\n  const editFieldHandler = (columnUUID) => {\n    setMode(\"edit\");\n    const foundField = fieldsConfig.find(\n      (field) => field.columnUUID === columnUUID\n    );\n    setFieldConfig(foundField);\n  };\n\n  const updateFieldConfig = (fieldConfig) => {\n    console.log(\"update\", fieldConfig);\n    let foundFieldIdx = fieldsConfig.findIndex(\n      (field) => field.columnUUID === fieldConfig.columnUUID\n    );\n    const newFieldsConfig = [...fieldsConfig];\n    newFieldsConfig[foundFieldIdx] = fieldConfig;\n    setFieldsConfig(newFieldsConfig);\n    setMode(\"view\");\n  };\n\n  return (\n    <div className={classes.fields}>\n      template fields\n      <ul className={classes.ul}>\n        {fieldsConfig.length === 0 && <div>No field added yet...</div>}\n        {fieldsConfig?.map((fieldConfig) => {\n          return (\n            <TemplateFieldBox\n              key={fieldConfig.columnUUID}\n              fieldConfig={fieldConfig}\n              editField={editFieldHandler}\n            ></TemplateFieldBox>\n          );\n        })}\n      </ul>\n      <button onClick={() => setMode(\"addNew\")} className={classes.addButton}>\n        +\n      </button>\n      {mode === \"addNew\" && (\n        <TemplateFieldCreator\n          saveFieldConfigHandler={addFieldConfig}\n          cancelModal={() => setMode(\"view\")}\n        />\n      )}\n      {mode === \"edit\" && (\n        <TemplateFieldCreator\n          saveFieldConfigHandler={updateFieldConfig}\n          cancelModal={() => setMode(\"view\")}\n          fieldConfig={{ ...fieldConfig }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default TemplateFields;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { clearState } from \"../../store/editedEntry-slice\";\nimport classes from \"./GoBack.module.css\";\n\nconst GoBack = (props) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const goBackHandler = () => {\n    if (props?.clearEntryStore) {\n      console.log(\"clear state\");\n      dispatch(clearState());\n    }\n    history.goBack();\n  };\n  return (\n    <button onClick={goBackHandler} className={classes.goBack}>\n      &larr;\n    </button>\n  );\n};\n\nexport default GoBack;\n","import TemplateFields from \"./TemplateFields\";\nimport { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  addNewLibraryTemplate,\n  selectLibraryById,\n} from \"../../store/templateLibraries-slice\";\nimport { useMutation } from \"@apollo/client\";\nimport {\n  ADD_LIBRARY_TEMPLATE_PG,\n  UPDATE_LIBRARY_TEMPLATE_PG,\n} from \"../../API/graphQLTypes\";\nimport GoBack from \"../buttons/GoBack\";\nimport { useHistory } from \"react-router-dom\";\nimport classes from \"./TemplateLibraryCreator.module.css\";\nimport { useLocation } from \"react-router-dom\";\nimport { addNewLibraryData } from \"../../store/librariesData-slice\";\nimport { selectConfiguration } from \"../../store/configuration-slice\";\n\nconst prepareSqlFieldName = (name) => {\n  let preparedName = name\n    ?.replaceAll(\"  \", \" \")\n    ?.replaceAll(\" \", \"_\")\n    ?.toLowerCase();\n  return preparedName;\n};\n\nconst TemplateLibraryCreator = () => {\n  const location = useLocation();\n  let libUUID = null;\n  libUUID = location?.state?.libUUID;\n  const [libConfig, setLibConfig] = useState({});\n  const [showPanel, setShowPanel] = useState(\"main\");\n  const dispatch = useDispatch();\n  const [insertTemplateInPG] = useMutation(ADD_LIBRARY_TEMPLATE_PG);\n  const [updateTemplateInPG] = useMutation(UPDATE_LIBRARY_TEMPLATE_PG);\n  const history = useHistory();\n  const isUpdate = libUUID ? true : false;\n  const saveFieldsConfigHandler = (fieldsConfig) => {\n    setLibConfig((prev) => {\n      return { ...prev, columns: fieldsConfig };\n    });\n  };\n  const storageType = useSelector((state) =>\n    selectConfiguration(state)\n  )?.storageType;\n\n  const templateLibSelected = useSelector((state) =>\n    selectLibraryById(state, libUUID)\n  );\n  if (libUUID && !libConfig?.libUUID) {\n    setLibConfig({\n      ...templateLibSelected,\n    });\n  }\n\n  if (!libUUID && !libConfig?.libUUID)\n    setLibConfig((prev) => {\n      return { ...prev, libUUID: uuidv4() };\n    });\n\n  const setInputValueHandler = (e) => {\n    setLibConfig((prev) => {\n      return { ...prev, [e.target.id]: e.target.value };\n    });\n  };\n\n  const saveLibraryHandler = () => {\n    try {\n      const libConfigTmp = { ...libConfig };\n      libConfigTmp.sqlTableName = prepareSqlFieldName(libConfigTmp.name);\n      dispatch(addNewLibraryTemplate(libConfigTmp));\n      dispatch(\n        addNewLibraryData({\n          name: libConfigTmp.name,\n          libUUID: libConfigTmp.libUUID,\n        })\n      );\n      if (!isUpdate) {\n        if (storageType === \"outerDatabase\")\n          insertTemplateInPG({ variables: { libraryTemplate: libConfigTmp } });\n      } else if (storageType === \"outerDatabase\")\n        updateTemplateInPG({ variables: { libraryTemplate: libConfigTmp } });\n\n      history.push(\"/\");\n    } catch (error) {\n      console.log(\n        `error occurred while update/insert template in db/state manager: ${error}`\n      );\n    }\n  };\n  const buttonActive = {\n    checkMain: () => (showPanel === \"main\" ? classes.active : []),\n    checkFields: () => (showPanel === \"fields\" ? classes.active : []),\n  };\n  return (\n    <div className={classes.main}>\n      <header className={classes.header}>\n        <div className={classes.goBack}>\n          <GoBack />\n        </div>\n        <button onClick={saveLibraryHandler}>&#10003;</button>\n      </header>\n      <section className={classes.tab}>\n        <button\n          onClick={() => setShowPanel(\"main\")}\n          className={[classes.tabButton, buttonActive.checkMain()].join(\" \")}\n        >\n          Main\n        </button>\n        <button\n          onClick={() => setShowPanel(\"fields\")}\n          className={[classes.tabButton, buttonActive.checkFields()].join(\" \")}\n        >\n          Field\n        </button>\n      </section>\n      {showPanel === \"main\" && (\n        <section\n          className={[classes.mainOptions, buttonActive.checkMain()].join(\" \")}\n        >\n          <label htmlFor=\"name\"> Name</label>\n          <input\n            type=\"edit\"\n            id=\"name\"\n            onBlur={setInputValueHandler}\n            defaultValue={libConfig.name}\n          ></input>\n          <label htmlFor=\"color\"> Color</label>\n          <input type=\"color\" id=\"color\" onBlur={setInputValueHandler}></input>\n          <label htmlFor=\"group\"> Group</label>\n          <input type=\"text\" id=\"group\" onBlur={setInputValueHandler}></input>\n        </section>\n      )}\n      {showPanel === \"fields\" && (\n        <div className={[buttonActive.checkFields()].join(\" \")}>\n          <TemplateFields\n            saveFieldsConfigHandler={saveFieldsConfigHandler}\n            fields={libConfig.columns}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\nexport default TemplateLibraryCreator;\n","import { MenuItem } from \"@mui/material\";\nimport { useHistory } from \"react-router\";\n\nconst HeaderMenuOptions = ({ handleCloseMenu }) => {\n  const history = useHistory();\n\n  const handleConfiguration = () => {\n    history.push(\"/configuration\");\n    handleCloseMenu();\n  };\n\n  const handleNewLibraryCreator = () => {\n    history.push(\"/creator\");\n    handleCloseMenu();\n  };\n  return (\n    <>\n      <MenuItem onClick={handleConfiguration}>Configuration</MenuItem>\n      <MenuItem onClick={handleNewLibraryCreator}>New Library</MenuItem>\n    </>\n  );\n};\nexport default HeaderMenuOptions;\n","import { AppBar, IconButton, Menu, Toolbar, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport { useState } from \"react\";\nimport SettingsIcon from \"@mui/icons-material/Settings\";\nimport HeaderMenuOptions from \"./HeaderMenuOptions\";\nimport { useHistory } from \"react-router\";\n\nconst MainTopHeader = () => {\n  const [anchorElement, setAnchorElement] = useState(null);\n  const handleMenu = (event) => {\n    setAnchorElement(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorElement(null);\n  };\n  const history = useHistory();\n\n  const handleConfiguration = () => {\n    history.push(\"/configuration\");\n  };\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            size=\"large\"\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"settings\"\n            sx={{ mr: 2 }}\n            onClick={handleConfiguration}\n          >\n            <SettingsIcon />\n          </IconButton>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            Default group\n          </Typography>\n\n          <IconButton\n            size=\"large\"\n            aria-label=\"config\"\n            aria-controls=\"menu-appbar\"\n            aria-haspopup=\"true\"\n            onClick={handleMenu}\n            color=\"inherit\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Menu\n            id=\"menu-appbar\"\n            anchorEl={anchorElement}\n            anchorOrigin={{\n              vertical: \"top\",\n              horizontal: \"right\",\n            }}\n            keepMounted\n            transformOrigin={{\n              vertical: \"top\",\n              horizontal: \"right\",\n            }}\n            open={Boolean(anchorElement)}\n            onClose={handleClose}\n          >\n            <HeaderMenuOptions handleCloseMenu={handleClose} />\n          </Menu>\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n};\n\nexport default MainTopHeader;\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Typography,\n} from \"@mui/material\";\nimport { useState } from \"react\";\n\nconst ClearLocalStorage = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setIsOpen(true);\n  };\n\n  const handleClose = () => {\n    setIsOpen(false);\n  };\n\n  const clearLocalStorageHandler = () => {\n    localStorage.removeItem(\"libsData\");\n    localStorage.removeItem(\"templates\");\n    localStorage.removeItem(\"entryViewConfig\");\n    setIsOpen(false);\n    window.location.reload(false);\n  };\n\n  return (\n    <>\n      <Typography component=\"h4\">Clear database data?</Typography>\n      <Button\n        variant=\"outlined\"\n        color=\"error\"\n        sx={{ maxWidth: \"40%\" }}\n        onClick={handleClickOpen}\n      >\n        Clear local storage\n      </Button>\n\n      <Dialog\n        open={isOpen}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Are you sure?\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            This action will clear data from local storage. All your created\n            library will be deleted with data. That's cannot be undone!\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Disagree</Button>\n          <Button onClick={clearLocalStorageHandler} autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default ClearLocalStorage;\n","import {\n  Alert,\n  Button,\n  FormControl,\n  MenuItem,\n  Select,\n  Snackbar,\n} from \"@mui/material\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport { Box } from \"@mui/system\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  updateConfiguration,\n  selectConfiguration,\n} from \"../../store/configuration-slice\";\nimport Header from \"../library/Header\";\nimport ClearLocalStorage from \"./ClearLocalStorage\";\n\nconst Configuration = () => {\n  const dispatch = useDispatch();\n  const config = useSelector((state) => selectConfiguration(state));\n  const [storageType, setStorageType] = useState(config?.storageType);\n  const [isSnackbarOpen, setIsSnackbarOpen] = useState(false);\n\n  const storageTypeHandler = (e) => {\n    setStorageType(e.target.value);\n  };\n\n  const saveConfigHandler = (event) => {\n    const configForSave = {\n      ...config,\n      storageType,\n    };\n    dispatch(updateConfiguration(configForSave));\n    localStorage.setItem(\"config\", JSON.stringify(configForSave));\n    event.preventDefault();\n    setIsSnackbarOpen(true);\n  };\n  const snackbarCloseHandle = (event, reason) => {\n    if (reason === \"clickaway\") return;\n    setIsSnackbarOpen(false);\n  };\n\n  return (\n    <>\n      <Header title=\"Configuration\" />\n      <form onSubmit={saveConfigHandler}>\n        <Box display=\"flex\" flexDirection=\"column\">\n          <FormControl sx={{ m: 3 }}>\n            <InputLabel id=\"storageTypeLabel\">Storage type</InputLabel>\n            <Select\n              labelId=\"storageTypeLabel\"\n              id=\"storageType\"\n              value={storageType}\n              onChange={storageTypeHandler}\n              autoWidth\n              label=\"Storage type\"\n            >\n              <MenuItem value=\"localStorage\">Local storage</MenuItem>\n              <MenuItem value=\"outerDatabase\">Outer database</MenuItem>\n            </Select>\n          </FormControl>\n\n          <FormControl sx={{ ml: 3 }}>\n            <ClearLocalStorage />\n          </FormControl>\n          <Button type=\"submit\" variant=\"contained\" sx={{ mt: 3 }}>\n            Save\n          </Button>\n          <Snackbar\n            open={isSnackbarOpen}\n            autoHideDuration={5000}\n            onClose={snackbarCloseHandle}\n          >\n            <Alert\n              onClose={snackbarCloseHandle}\n              severity=\"success\"\n              sx={{ width: \"100%\" }}\n            >\n              Config saved successfully!\n            </Alert>\n          </Snackbar>\n        </Box>\n      </form>\n    </>\n  );\n};\n\nexport default Configuration;\n","import \"./App.css\";\nimport EntriesList from \"./components/library/EntriesList\";\nimport SingleEntryPage from \"./components/library/SingleEntryPage\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { Fragment, useEffect } from \"react\";\nimport LibrariesList from \"./components/library/LibrariesList\";\nimport { useQuery } from \"@apollo/client\";\nimport { useDispatch } from \"react-redux\";\nimport { updateAllLibraries } from \"./store/templateLibraries-slice\";\nimport {\n  GET_LIBRARIES_TEMPLATES,\n  GET_LIBRARIES_DATA_PG,\n} from \"./API/graphQLTypes\";\nimport {\n  updateAllLibrariesData,\n  updateAllLibrariesDataFromStorage,\n} from \"./store/librariesData-slice\";\nimport TemplateLibraryCreator from \"./components/templates/TemplateLibraryCreator\";\nimport MainTopHeader from \"./UI/MainTopHeader\";\nimport Configuration from \"./components/configuration/Configuration\";\nimport { updateConfiguration } from \"./store/configuration-slice\";\nimport {\n  LOCAL_STORAGE_INIT_CONFIG,\n  LOCAL_STORAGE_INIT_DATA,\n  LOCAL_STORAGE_INIT_TEMPLATES,\n} from \"./API/config\";\n\nfunction App() {\n  const {\n    loading: loadingDataPg,\n    error: errorDataPg,\n    data: dataPg,\n  } = useQuery(GET_LIBRARIES_DATA_PG);\n  const { loading, error, data } = useQuery(GET_LIBRARIES_TEMPLATES);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const configJson = localStorage.getItem(\"config\");\n    let config = JSON.parse(configJson);\n    const isFirstStart = config?.isFirstStart || config === null;\n    if (isFirstStart) {\n      config = JSON.parse(LOCAL_STORAGE_INIT_CONFIG);\n      config = {\n        ...config,\n        isFirstStart: false,\n      };\n      localStorage.setItem(\"config\", JSON.stringify(config));\n    }\n    dispatch(updateConfiguration(config));\n    let templatesJson = localStorage.getItem(\"templates\");\n    if (isFirstStart) templatesJson = LOCAL_STORAGE_INIT_TEMPLATES;\n    dispatch(updateAllLibraries(JSON.parse(templatesJson)));\n    let dataJson = localStorage.getItem(\"libsData\");\n    if (isFirstStart) dataJson = LOCAL_STORAGE_INIT_DATA;\n    dispatch(updateAllLibrariesDataFromStorage(JSON.parse(dataJson)));\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (error) console.error(\"error In GET_LIBRARIES_TEMPLATES\", error);\n    else if (!loading) dispatch(updateAllLibraries(data?.librariesTemplates));\n  }, [data, dispatch, loading, error]);\n\n  useEffect(() => {\n    if (errorDataPg)\n      console.error(\"error In GET_LIBRARIES_DATA_PG\", errorDataPg);\n    else if (!loadingDataPg)\n      dispatch(updateAllLibrariesData(dataPg?.librariesDataPG));\n  }, [loadingDataPg, dataPg, dispatch, errorDataPg]);\n\n  return (\n    <Router>\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={() => (\n            <Fragment>\n              <MainTopHeader />\n              <LibrariesList />\n            </Fragment>\n          )}\n        />\n        <Route exact path=\"/library\" component={EntriesList} />\n        <Route exact path=\"/library/entry/\" component={SingleEntryPage} />\n        <Route exact path=\"/creator\" component={TemplateLibraryCreator} />\n        <Route exact path=\"/configuration\" component={Configuration} />\n        <Redirect to=\"/\" />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","export const SERVER_IP = \"http://192.168.55.37:4000\";\n\nexport const LOCAL_STORAGE_INIT_TEMPLATES = `[\n    {\n       \"libUUID\":\"caefce1c-b126-40de-a816-e4038d38b103\",\n       \"name\":\"Persons\",\n       \"columns\":[\n          {\n             \"usage\":\"title\",\n             \"name\":\"Name\",\n             \"type\":\"string\",\n             \"sqlFieldName\":\"name\",\n             \"options\":[\n                \n             ],\n             \"columnUUID\":\"e5a55943-2b1f-481d-9274-f27fdb474bd2\"\n          }\n       ],\n       \"sqlTableName\":\"persons\"\n    },\n    {\n       \"libUUID\":\"566bf6a6-60ee-440b-a67a-b4154f0af8d7\",\n       \"name\":\"Books\",\n       \"columns\":[\n          {\n             \"usage\":\"title\",\n             \"name\":\"Name\",\n             \"type\":\"string\",\n             \"sqlFieldName\":\"name\",\n             \"options\":[\n                \n             ],\n             \"columnUUID\":\"e77ffe47-74a0-46ca-8dcc-cee505b76e2e\"\n          },\n          {\n             \"usage\":\"description\",\n             \"name\":\"Number of pages\",\n             \"type\":\"int\",\n             \"sqlFieldName\":\"number_of_pages\",\n             \"options\":[\n                \n             ],\n             \"columnUUID\":\"f9999d4e-3c71-43d1-80df-941683a02c73\"\n          },\n          {\n             \"usage\":\"normal\",\n             \"name\":\"Author\",\n             \"type\":\"string\",\n             \"sqlFieldName\":\"author\",\n             \"options\":[\n                \n             ],\n             \"columnUUID\":\"0f263e33-7912-465c-a40b-3395d205dec2\"\n          },\n          {\n             \"usage\":\"normal\",\n             \"name\":\"Was read\",\n             \"type\":\"checkbox\",\n             \"sqlFieldName\":\"was_read\",\n             \"options\":[\n                \n             ],\n             \"columnUUID\":\"c80414d3-022d-4ce9-87ec-4f84442ab7ec\"\n          },\n          {\n             \"usage\":\"normal\",\n             \"name\":\"Who read\",\n             \"type\":\"libEntry\",\n             \"sqlFieldName\":\"who_read\",\n             \"options\":[\n                {\n                   \"dictionaryLibraryName\":\"Persons\",\n                   \"dictionaryLibraryUUID\":\"caefce1c-b126-40de-a816-e4038d38b103\"\n                }\n             ],\n             \"columnUUID\":\"48678fc4-51d5-4095-9962-bb89fe5bcbb9\"\n          },\n          {\n             \"usage\":\"normal\",\n             \"name\":\"Category\",\n             \"type\":\"dropDownList\",\n             \"sqlFieldName\":\"category\",\n             \"options\":[\n                {\n                   \"default\":false,\n                   \"index\":1,\n                   \"value\":\"Classics\"\n                },\n                {\n                   \"default\":false,\n                   \"index\":2,\n                   \"value\":\"Action and Adventure\"\n                },\n                {\n                   \"default\":false,\n                   \"index\":3,\n                   \"value\":\"Comic Book\"\n                },\n                {\n                   \"default\":false,\n                   \"index\":4,\n                   \"value\":\"Fantasy\"\n                },\n                {\n                   \"default\":false,\n                   \"index\":5,\n                   \"value\":\"Historical Fiction\"\n                },\n                {\n                   \"default\":false,\n                   \"index\":6,\n                   \"value\":\"Horror\"\n                },\n                {\n                   \"default\":false,\n                   \"index\":7,\n                   \"value\":\"Literary Fiction\"\n                }\n             ],\n             \"columnUUID\":\"30523198-4d68-43cf-b2be-5fbab00f7f18\"\n          }\n       ],\n       \"sqlTableName\":\"books\"\n    }\n ]`;\n\nexport const LOCAL_STORAGE_INIT_DATA = `[\n    {\n       \"name\":\"Persons\",\n       \"libUUID\":\"caefce1c-b126-40de-a816-e4038d38b103\",\n       \"rows\":[\n          {\n             \"name\":\"John\",\n             \"rowUUID\":\"3f6a4d51-806d-48c4-bdb6-f5d9df8d64d7\",\n             \"fe_title\":\"John\",\n             \"fe_description\":\"\"\n          }\n       ]\n    },\n    {\n       \"name\":\"Books\",\n       \"libUUID\":\"566bf6a6-60ee-440b-a67a-b4154f0af8d7\",\n       \"rows\":[\n          {\n             \"name\":\"The Hobbit\",\n             \"number_of_pages\":\"310\",\n             \"author\":\"J.R.R. Tolkien\",\n             \"was_read\":\"1\",\n             \"who_read\":{\n                \"value\":\"71926154-98e3-457e-82b9-2017ce491e6e\",\n                \"entrylinks\":[\n                   {\n                      \"rowUUID\":\"3f6a4d51-806d-48c4-bdb6-f5d9df8d64d7\",\n                      \"columnUUID\":\"48678fc4-51d5-4095-9962-bb89fe5bcbb9\",\n                      \"rowTitle\":\"John\",\n                      \"libUUID\":\"caefce1c-b126-40de-a816-e4038d38b103\",\n                      \"tableName\":\"persons\"\n                   }\n                ]\n             },\n             \"category\":\"Fantasy\",\n             \"rowUUID\":\"cb17806e-4e20-4fc8-9a06-8680ee3d96bf\",\n             \"fe_title\":\"The Hobbit\",\n             \"fe_description\":\"310\"\n          }\n       ]\n    }\n ]`;\n\nexport const LOCAL_STORAGE_INIT_CONFIG = `{\"storageType\":\"localStorage\", \"isFirstStart\":true}`;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport editedEntrySlice from \"./editedEntry-slice\";\nimport librariesDataSlice from \"./librariesData-slice\";\nimport librariesTemplateSlice from \"./templateLibraries-slice\";\nimport configurationSlice from \"./configuration-slice\";\n\nconst store = configureStore({\n  reducer: {\n    librariesTemplate: librariesTemplateSlice,\n    editedEntry: editedEntrySlice,\n    librariesData: librariesDataSlice,\n    configuration: configurationSlice,\n  },\n});\n\nexport default store;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectAllDataLibrary } from \"./librariesData-slice\";\nimport { selectAllLibraries } from \"./templateLibraries-slice\";\n\nconst BrowserStore = () => {\n  const librariesData = useSelector((state) => selectAllDataLibrary(state));\n  if (librariesData.length)\n    localStorage.setItem(\"libsData\", JSON.stringify(librariesData));\n\n  const templateLibraries = useSelector((state) => selectAllLibraries(state));\n  if (templateLibraries.length)\n    localStorage.setItem(\"templates\", JSON.stringify(templateLibraries));\n\n  return <></>;\n};\n\nexport default BrowserStore;\n","import { createTheme } from \"@mui/material\";\nimport { grey, yellow } from \"@mui/material/colors\";\n\nexport const customTheme = createTheme({\n  palette: {\n    primary: {\n      dark: grey[700],\n      main: grey[500],\n      light: grey[400],\n      lighter: grey[200],\n    },\n    secondary: {\n      main: yellow[300],\n      light: yellow[100],\n      dark: yellow[600],\n    },\n  },\n});\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\nimport { ApolloClient, InMemoryCache, ApolloProvider } from \"@apollo/client\";\nimport BrowserStore from \"./store/browser-store\";\nimport { ThemeProvider } from \"@mui/system\";\nimport { customTheme } from \"./style/customTheme\";\nimport { SERVER_IP } from \"./API/config\";\n\nconst client = new ApolloClient({\n  uri: SERVER_IP,\n  cache: new InMemoryCache({\n    addTypename: false,\n  }),\n});\n// window.__APOLLO_CLIENT__ = true;\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ApolloProvider client={client}>\n        <ThemeProvider theme={customTheme}>\n          <Fragment>\n            <App />\n            <BrowserStore />\n          </Fragment>\n        </ThemeProvider>\n      </ApolloProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = { items: [] };\n\nexport const editedEntrySlice = createSlice({\n  name: \"editedEntry\",\n  initialState,\n  reducers: {\n    clearState(state, action) {\n      state.items = [];\n    },\n\n    updateFieldValue(state, action) {\n      const { columnUUID, value: valueIn, type, checked } = action.payload;\n      const fieldIndex = state.items.findIndex(\n        (field) => field.field.columnUUID === columnUUID\n      );\n      let value = valueIn;\n      if (type === \"checkbox\") value = checked ? \"1\" : \"0\";\n      if (fieldIndex >= 0) {\n        state.items[fieldIndex].field.value = String(value);\n      }\n    },\n    updateEntryValues(state, action) {\n      state.items = action.payload;\n    },\n    addNewEntryLink(state, action) {\n      const {\n        parentColumnUUID,\n        rowUUID,\n        fe_title,\n        newUUID,\n        libUUID,\n        sqlTableName,\n        columnParentName,\n      } = action.payload;\n      const link = {\n        rowUUID,\n        columnUUID: parentColumnUUID,\n        rowTitle: fe_title,\n        libUUID,\n        tableName: sqlTableName,\n        columnParentName,\n      };\n      console.log(\"linkENtry: \", link, \"newUUID:\", newUUID);\n      const fieldIndex = state.items.findIndex((field) => {\n        return field.field.columnUUID === parentColumnUUID;\n      });\n      if (fieldIndex >= 0) {\n        if (state.items[fieldIndex].field?.entryLinks?.length > 0) {\n          console.log(\"fieldIndex\", fieldIndex, \"newUUID\", newUUID);\n          if (!state.items[fieldIndex]?.field?.value?.value)\n            state.items[fieldIndex].field.value.value = newUUID;\n          state.items[fieldIndex].field?.entryLinks?.push(link);\n        } else {\n          console.log(\"newUUID\", newUUID);\n          const entryLinks = [];\n          entryLinks.push(link);\n          state.items[fieldIndex].field.value.value = newUUID;\n          state.items[fieldIndex].field.entryLinks = entryLinks;\n        }\n      }\n    },\n\n    deleteEntryLink(state, action) {\n      const { columnUUID, entryIndex } = action.payload;\n\n      const fieldIndex = state.items.findIndex((field) => {\n        return field.field.columnUUID === columnUUID;\n      });\n      if (fieldIndex >= 0 && entryIndex >= 0)\n        state.items[fieldIndex].field?.entryLinks?.splice(entryIndex, 1);\n    },\n  },\n});\n\nexport const {\n  updateFieldValue,\n  updateEntryValues,\n  addNewEntryLink,\n  deleteEntryLink,\n  clearState,\n} = editedEntrySlice.actions;\n\nexport default editedEntrySlice.reducer;\n\nexport const selectAllFields = (state) => state.editedEntry?.items;\n\nexport const selectFieldByName = (state, fieldName) =>\n  state.editedEntry?.items.find(\n    (field) => field.name.toLowerCase() === fieldName.toLowerCase()\n  );\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = [];\n\nexport const librariesDataSlice = createSlice({\n  name: \"librariesDataSlice\",\n  initialState,\n  reducers: {\n    updateAllLibrariesDataFromStorage(state, action) {\n      action.payload?.forEach((lib) => {\n        state.push(lib);\n      });\n    },\n    updateAllLibrariesData(state, action) {\n      action.payload?.forEach((lib) => {\n        const rowsData = [];\n        lib.rows.forEach((row) => {\n          const columnsFromJSON = JSON.parse(row.rowJSON);\n          rowsData.push({\n            rowUUID: row.rowUUID,\n            fe_title: row.fe_title,\n            fe_description: row.fe_description,\n            ...columnsFromJSON,\n          });\n        });\n\n        const libTemp = {\n          name: lib.name,\n          libUUID: lib.libUUID,\n          rows: rowsData,\n        };\n\n        state.push(libTemp);\n      });\n    },\n    addNewLibraryData(state, action) {\n      const { libUUID, name } = action.payload;\n\n      const lib = {\n        name: name,\n        libUUID: libUUID,\n        rows: [],\n      };\n      state.push(lib);\n    },\n    updateLibraryRecord(state, action) {\n      const { libUUID, rowUUID, editedFields } = action.payload;\n      const libIndex = state.findIndex((lib) => lib.libUUID === libUUID);\n      const rowIndex = state[libIndex].rows.findIndex(\n        (row) => row.rowUUID === rowUUID\n      );\n      editedFields.forEach((col) => {\n        const sqlFieldName = col.columnTemplate.sqlFieldName;\n        if (sqlFieldName) {\n          if (col.columnTemplate.type === \"libEntry\") {\n            state[libIndex].rows[rowIndex][sqlFieldName].value =\n              col.field?.value?.value;\n            state[libIndex].rows[rowIndex][sqlFieldName].entrylinks =\n              col.field?.entryLinks;\n          } else state[libIndex].rows[rowIndex][sqlFieldName] = col.field.value;\n        }\n      });\n    },\n    addNewLibraryRecord(state, action) {\n      const { libUUID, rowUUID, editedFields, name } = action.payload;\n      let libIndex = state.findIndex((lib) => lib.libUUID === libUUID);\n      if (libIndex < 0) {\n        state.push({\n          name: name,\n          libUUID: libUUID,\n          rows: [],\n        });\n        libIndex = state.findIndex((lib) => lib.libUUID === libUUID);\n      }\n\n      const newRow = {};\n      const titleColumnsValues = [];\n      const descriptionColumnsValues = [];\n      editedFields.forEach((col) => {\n        const sqlFieldName = col.columnTemplate.sqlFieldName;\n        if (sqlFieldName) {\n          newRow[sqlFieldName] = {};\n\n          if (col.columnTemplate.type === \"libEntry\") {\n            newRow[sqlFieldName].value = col.field?.value?.value;\n            newRow[sqlFieldName].entrylinks = col.field?.entryLinks;\n\n            if (col.columnTemplate.usage === \"title\")\n              col.field.entryLinks.forEach((link) =>\n                titleColumnsValues.push(link.rowTitle)\n              );\n            if (col.columnTemplate.usage === \"description\")\n              col.field.entryLinks.forEach((link) =>\n                descriptionColumnsValues.push(link.rowTitle)\n              );\n          } else {\n            newRow[sqlFieldName] = col.field.value;\n            if (col.columnTemplate.usage === \"title\")\n              titleColumnsValues.push(col.field.value);\n            if (col.columnTemplate.usage === \"description\")\n              descriptionColumnsValues.push(col.field.value);\n          }\n        }\n      });\n      newRow.rowUUID = rowUUID;\n      newRow.fe_title = titleColumnsValues.join(\" \");\n      newRow.fe_description = descriptionColumnsValues.join(\" \");\n      state[libIndex].rows.push(newRow);\n    },\n\n    deleteLibraryData(state, action) {\n      const { libUUID } = action.payload;\n      let libIndex = state.findIndex((lib) => lib.libUUID === libUUID);\n      if (libIndex > -1) state.splice(libIndex, 1);\n    },\n\n    deleteRowData(state, action) {\n      const { libUUID, rowUUID } = action.payload;\n      let libIndex = state.findIndex((lib) => lib.libUUID === libUUID);\n      if (libIndex > -1) {\n        let rowIndex = state[libIndex].rows.findIndex(\n          (row) => row.rowUUID === rowUUID\n        );\n        if (rowIndex > -1) state[libIndex].rows.splice(rowIndex, 1);\n      }\n    },\n  },\n});\n\nexport const {\n  updateAllLibrariesData,\n  addNewLibraryData,\n  updateLibraryRecord,\n  addNewLibraryRecord,\n  updateAllLibrariesDataFromStorage,\n  deleteLibraryData,\n  deleteRowData,\n} = librariesDataSlice.actions;\n\nexport default librariesDataSlice.reducer;\n\nexport const selectAllDataLibrary = (state) => state?.librariesData;\n\nexport const getLibDataByLibraryId = (state, libUUID) => {\n  return state.librariesData?.find((lib) => lib.libUUID === libUUID);\n};\n\nexport const getRowDataById = (state, { rowUUID, libUUID }) => {\n  if (!rowUUID || !libUUID) return null;\n  return state.librariesData\n    ?.find((lib) => lib.libUUID === libUUID)\n    ?.rows.find((row) => row.rowUUID === rowUUID);\n};\n\nexport const getRowsDataByIds = (state, { libUUID, listRowsUUID }) => {\n  const lib = state.librariesData.find((lib) => lib.libUUID === libUUID);\n  return lib?.rows.filter((row) => listRowsUUID.includes(row.rowUUID));\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = [];\n\nexport const librariesTemplateSlice = createSlice({\n  name: \"librariesTemplate\",\n  initialState,\n  reducers: {\n    updateAllLibraries(state, action) {\n      action.payload?.map((lib) => state.push(lib));\n    },\n    addNewLibraryTemplate(state, action) {\n      const libUUID = action.payload.libUUID;\n\n      let templateLibIdx = state.findIndex((lib) => lib.libUUID === libUUID);\n      if (templateLibIdx >= 0) {\n        state[templateLibIdx] = action.payload;\n      } else {\n        state.push(action.payload);\n      }\n    },\n    deleteLibraryTemplate(state, action) {\n      const { libUUID } = action.payload;\n      let libIndex = state.findIndex((lib) => lib.libUUID === libUUID);\n      state.splice(libIndex, 1);\n    },\n  },\n});\n\nexport const {\n  updateAllLibraries,\n  addNewLibraryTemplate,\n  deleteLibraryTemplate,\n} = librariesTemplateSlice.actions;\n\nexport default librariesTemplateSlice.reducer;\n\nexport const selectAllLibraries = (state) => state.librariesTemplate;\nexport const selectLibraryById = (state, uuid) =>\n  state.librariesTemplate?.find((lib) => lib.libUUID === uuid);\nexport const selectLibrariesInfo = (state) => {\n  return state.librariesTemplate.map((lib) => {\n    return {\n      libUUID: lib.libUUID,\n      name: lib.name,\n      sqlTableName: lib.sqlTableName,\n    };\n  });\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"TemplateLibraryCreator_main__3Zjq5\",\"goBack\":\"TemplateLibraryCreator_goBack__13EA7\",\"header\":\"TemplateLibraryCreator_header__3uiit\",\"mainOptions\":\"TemplateLibraryCreator_mainOptions__1Ihk_\",\"tab\":\"TemplateLibraryCreator_tab__rTDK9\",\"tabButton\":\"TemplateLibraryCreator_tabButton__3_S2w\",\"active\":\"TemplateLibraryCreator_active__3oLlr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"TemplateFieldCreator_modal__2LBeV\",\"header\":\"TemplateFieldCreator_header__2c5ZU\",\"form\":\"TemplateFieldCreator_form__WrC7n\",\"backdrop\":\"TemplateFieldCreator_backdrop__UE-c2\",\"container\":\"TemplateFieldCreator_container__1oYxx\",\"type\":\"TemplateFieldCreator_type__2hAG4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"SelectField_modal__1uSDM\",\"backdrop\":\"SelectField_backdrop__1-YyJ\",\"header\":\"SelectField_header__h5m7Z\",\"ul\":\"SelectField_ul__2VuWy\",\"list\":\"SelectField_list__GapW0\"};"],"sourceRoot":""}